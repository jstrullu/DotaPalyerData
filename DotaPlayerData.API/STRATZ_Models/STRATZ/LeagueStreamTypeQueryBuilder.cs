// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueStreamTypeQueryBuilder : GraphQlQueryBuilder<LeagueStreamTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "id" },
                new FieldMetadata { Name = "languageId" },
                new FieldMetadata { Name = "name" },
                new FieldMetadata { Name = "broadcastProvider", IsComplex = true },
                new FieldMetadata { Name = "streamUrl" },
                new FieldMetadata { Name = "vodUrl" }
            };

        protected override string TypeName { get { return "LeagueStreamType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueStreamTypeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public LeagueStreamTypeQueryBuilder WithLanguageId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("languageId", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptLanguageId()
        {
            return ExceptField("languageId");
        }

        public LeagueStreamTypeQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public LeagueStreamTypeQueryBuilder WithBroadcastProvider(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("broadcastProvider", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptBroadcastProvider()
        {
            return ExceptField("broadcastProvider");
        }

        public LeagueStreamTypeQueryBuilder WithStreamUrl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("streamUrl", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptStreamUrl()
        {
            return ExceptField("streamUrl");
        }

        public LeagueStreamTypeQueryBuilder WithVodUrl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("vodUrl", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueStreamTypeQueryBuilder ExceptVodUrl()
        {
            return ExceptField("vodUrl");
        }
    }
}
