// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueTableHeroOverviewTypeQueryBuilder : GraphQlQueryBuilder<LeagueTableHeroOverviewTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "matchWins" },
                new FieldMetadata { Name = "pickPhaseOne" },
                new FieldMetadata { Name = "pickPhaseTwo" },
                new FieldMetadata { Name = "pickPhaseThree" },
                new FieldMetadata { Name = "banCount" },
                new FieldMetadata { Name = "banPhaseOne" },
                new FieldMetadata { Name = "banPhaseTwo" },
                new FieldMetadata { Name = "banPhaseThree" }
            };

        protected override string TypeName { get { return "LeagueTableHeroOverviewType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueTableHeroOverviewTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithMatchWins(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchWins", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptMatchWins()
        {
            return ExceptField("matchWins");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithPickPhaseOne(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pickPhaseOne", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptPickPhaseOne()
        {
            return ExceptField("pickPhaseOne");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithPickPhaseTwo(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pickPhaseTwo", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptPickPhaseTwo()
        {
            return ExceptField("pickPhaseTwo");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithPickPhaseThree(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pickPhaseThree", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptPickPhaseThree()
        {
            return ExceptField("pickPhaseThree");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithBanCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("banCount", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptBanCount()
        {
            return ExceptField("banCount");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithBanPhaseOne(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("banPhaseOne", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptBanPhaseOne()
        {
            return ExceptField("banPhaseOne");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithBanPhaseTwo(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("banPhaseTwo", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptBanPhaseTwo()
        {
            return ExceptField("banPhaseTwo");
        }

        public LeagueTableHeroOverviewTypeQueryBuilder WithBanPhaseThree(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("banPhaseThree", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroOverviewTypeQueryBuilder ExceptBanPhaseThree()
        {
            return ExceptField("banPhaseThree");
        }
    }
}
