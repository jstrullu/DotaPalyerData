// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueTableHeroStatsTypeQueryBuilder : GraphQlQueryBuilder<LeagueTableHeroStatsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "kills" },
                new FieldMetadata { Name = "deaths" },
                new FieldMetadata { Name = "assists" },
                new FieldMetadata { Name = "cs" },
                new FieldMetadata { Name = "gpm" },
                new FieldMetadata { Name = "xpm" },
                new FieldMetadata { Name = "heal" },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "towerDamage" },
                new FieldMetadata { Name = "killContribution" }
            };

        protected override string TypeName { get { return "LeagueTableHeroStatsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueTableHeroStatsTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithGpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptGpm()
        {
            return ExceptField("gpm");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithXpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptXpm()
        {
            return ExceptField("xpm");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithHeal(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heal", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptHeal()
        {
            return ExceptField("heal");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public LeagueTableHeroStatsTypeQueryBuilder WithKillContribution(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killContribution", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableHeroStatsTypeQueryBuilder ExceptKillContribution()
        {
            return ExceptField("killContribution");
        }
    }
}
