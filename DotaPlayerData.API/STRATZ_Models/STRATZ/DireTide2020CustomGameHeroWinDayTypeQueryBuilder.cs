// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class DireTide2020CustomGameHeroWinDayTypeQueryBuilder : GraphQlQueryBuilder<DireTide2020CustomGameHeroWinDayTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "day", IsComplex = true },
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "winCount" },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "candyScored" }
            };

        protected override string TypeName { get { return "DireTide2020CustomGameHeroWinDayType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder WithDay(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("day", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder ExceptDay()
        {
            return ExceptField("day");
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder WithWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winCount", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder ExceptWinCount()
        {
            return ExceptField("winCount");
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder WithCandyScored(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("candyScored", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTide2020CustomGameHeroWinDayTypeQueryBuilder ExceptCandyScored()
        {
            return ExceptField("candyScored");
        }
    }
}
