// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PatchNoteLanguageTypeQueryBuilder : GraphQlQueryBuilder<PatchNoteLanguageTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "id" },
                new FieldMetadata { Name = "gameVersionId", IsComplex = true },
                new FieldMetadata { Name = "languageId", IsComplex = true },
                new FieldMetadata { Name = "index", IsComplex = true },
                new FieldMetadata { Name = "abilityId", IsComplex = true },
                new FieldMetadata { Name = "itemId", IsComplex = true },
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "generalId" },
                new FieldMetadata { Name = "text" }
            };

        protected override string TypeName { get { return "PatchNoteLanguageType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PatchNoteLanguageTypeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PatchNoteLanguageTypeQueryBuilder WithGameVersionId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gameVersionId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptGameVersionId()
        {
            return ExceptField("gameVersionId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithLanguageId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("languageId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptLanguageId()
        {
            return ExceptField("languageId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithIndex(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("index", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptIndex()
        {
            return ExceptField("index");
        }

        public PatchNoteLanguageTypeQueryBuilder WithAbilityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("abilityId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptAbilityId()
        {
            return ExceptField("abilityId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithItemId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptItemId()
        {
            return ExceptField("itemId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithGeneralId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("generalId", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptGeneralId()
        {
            return ExceptField("generalId");
        }

        public PatchNoteLanguageTypeQueryBuilder WithText(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("text", alias, new GraphQlDirective[] { include, skip });
        }

        public PatchNoteLanguageTypeQueryBuilder ExceptText()
        {
            return ExceptField("text");
        }
    }
}
