// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class AghanimLabPlayerDepthListTypeQueryBuilder : GraphQlQueryBuilder<AghanimLabPlayerDepthListTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "numDeaths", IsComplex = true },
                new FieldMetadata { Name = "goldBags", IsComplex = true },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "networth" },
                new FieldMetadata { Name = "rarity", IsComplex = true },
                new FieldMetadata { Name = "selectedRewardAbilityId", IsComplex = true },
                new FieldMetadata { Name = "selectedRewardAbility", IsComplex = true, QueryBuilderType = typeof(AbilityCustomGameTypeQueryBuilder) },
                new FieldMetadata { Name = "unSelectedRewardAbilityId1", IsComplex = true },
                new FieldMetadata { Name = "unSelectedRewardAbility1", IsComplex = true, QueryBuilderType = typeof(AbilityCustomGameTypeQueryBuilder) },
                new FieldMetadata { Name = "unSelectedRewardAbilityId2", IsComplex = true },
                new FieldMetadata { Name = "unSelectedRewardAbility2", IsComplex = true, QueryBuilderType = typeof(AbilityCustomGameTypeQueryBuilder) },
                new FieldMetadata { Name = "selectedRewardImageAbilityId", IsComplex = true }
            };

        protected override string TypeName { get { return "AghanimLabPlayerDepthListType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AghanimLabPlayerDepthListTypeQueryBuilder WithNumDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numDeaths", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptNumDeaths()
        {
            return ExceptField("numDeaths");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithGoldBags(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldBags", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptGoldBags()
        {
            return ExceptField("goldBags");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithNetworth(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networth", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptNetworth()
        {
            return ExceptField("networth");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithRarity(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("rarity", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptRarity()
        {
            return ExceptField("rarity");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithSelectedRewardAbilityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedRewardAbilityId", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptSelectedRewardAbilityId()
        {
            return ExceptField("selectedRewardAbilityId");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithSelectedRewardAbility(AbilityCustomGameTypeQueryBuilder abilityCustomGameTypeQueryBuilder, QueryBuilderParameter<int?> langaugeId = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (langaugeId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "langaugeId", ArgumentValue = langaugeId} );

            return WithObjectField("selectedRewardAbility", alias, abilityCustomGameTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptSelectedRewardAbility()
        {
            return ExceptField("selectedRewardAbility");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithUnSelectedRewardAbilityId1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unSelectedRewardAbilityId1", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptUnSelectedRewardAbilityId1()
        {
            return ExceptField("unSelectedRewardAbilityId1");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithUnSelectedRewardAbility1(AbilityCustomGameTypeQueryBuilder abilityCustomGameTypeQueryBuilder, QueryBuilderParameter<int?> langaugeId = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (langaugeId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "langaugeId", ArgumentValue = langaugeId} );

            return WithObjectField("unSelectedRewardAbility1", alias, abilityCustomGameTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptUnSelectedRewardAbility1()
        {
            return ExceptField("unSelectedRewardAbility1");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithUnSelectedRewardAbilityId2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unSelectedRewardAbilityId2", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptUnSelectedRewardAbilityId2()
        {
            return ExceptField("unSelectedRewardAbilityId2");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithUnSelectedRewardAbility2(AbilityCustomGameTypeQueryBuilder abilityCustomGameTypeQueryBuilder, QueryBuilderParameter<int?> langaugeId = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (langaugeId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "langaugeId", ArgumentValue = langaugeId} );

            return WithObjectField("unSelectedRewardAbility2", alias, abilityCustomGameTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptUnSelectedRewardAbility2()
        {
            return ExceptField("unSelectedRewardAbility2");
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder WithSelectedRewardImageAbilityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedRewardImageAbilityId", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabPlayerDepthListTypeQueryBuilder ExceptSelectedRewardImageAbilityId()
        {
            return ExceptField("selectedRewardImageAbilityId");
        }
    }
}
