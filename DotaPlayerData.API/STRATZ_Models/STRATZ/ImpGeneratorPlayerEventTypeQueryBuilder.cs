// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class ImpGeneratorPlayerEventTypeQueryBuilder : GraphQlQueryBuilder<ImpGeneratorPlayerEventTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "time", IsComplex = true },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "assists", IsComplex = true },
                new FieldMetadata { Name = "cs", IsComplex = true },
                new FieldMetadata { Name = "dn", IsComplex = true },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "physicalDamage" },
                new FieldMetadata { Name = "magicalDamage" },
                new FieldMetadata { Name = "pureDamage" },
                new FieldMetadata { Name = "damageReceived" },
                new FieldMetadata { Name = "healingAllies" },
                new FieldMetadata { Name = "runePower" },
                new FieldMetadata { Name = "neutrals" }
            };

        protected override string TypeName { get { return "ImpGeneratorPlayerEventType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ImpGeneratorPlayerEventTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithDn(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("dn", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptDn()
        {
            return ExceptField("dn");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithPhysicalDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("physicalDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptPhysicalDamage()
        {
            return ExceptField("physicalDamage");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithMagicalDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("magicalDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptMagicalDamage()
        {
            return ExceptField("magicalDamage");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithPureDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pureDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptPureDamage()
        {
            return ExceptField("pureDamage");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithDamageReceived(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("damageReceived", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptDamageReceived()
        {
            return ExceptField("damageReceived");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithHealingAllies(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("healingAllies", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptHealingAllies()
        {
            return ExceptField("healingAllies");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithRunePower(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("runePower", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptRunePower()
        {
            return ExceptField("runePower");
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder WithNeutrals(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("neutrals", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerEventTypeQueryBuilder ExceptNeutrals()
        {
            return ExceptField("neutrals");
        }
    }
}
