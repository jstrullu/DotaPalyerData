// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class Ti2020CustomGameRoomModifierTypeQueryBuilder : GraphQlQueryBuilder<Ti2020CustomGameRoomModifierTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "difficulty" },
                new FieldMetadata { Name = "modifierId", IsComplex = true },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "winCount" },
                new FieldMetadata { Name = "deathCount" },
                new FieldMetadata { Name = "eliteMatchCount" },
                new FieldMetadata { Name = "eliteWinCount" },
                new FieldMetadata { Name = "eliteDeathCount" }
            };

        protected override string TypeName { get { return "TI2020CustomGameRoomModifierType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithDifficulty(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("difficulty", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptDifficulty()
        {
            return ExceptField("difficulty");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithModifierId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifierId", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptModifierId()
        {
            return ExceptField("modifierId");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptWinCount()
        {
            return ExceptField("winCount");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithDeathCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deathCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptDeathCount()
        {
            return ExceptField("deathCount");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithEliteMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("eliteMatchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptEliteMatchCount()
        {
            return ExceptField("eliteMatchCount");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithEliteWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("eliteWinCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptEliteWinCount()
        {
            return ExceptField("eliteWinCount");
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder WithEliteDeathCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("eliteDeathCount", alias, new GraphQlDirective[] { include, skip });
        }

        public Ti2020CustomGameRoomModifierTypeQueryBuilder ExceptEliteDeathCount()
        {
            return ExceptField("eliteDeathCount");
        }
    }
}
