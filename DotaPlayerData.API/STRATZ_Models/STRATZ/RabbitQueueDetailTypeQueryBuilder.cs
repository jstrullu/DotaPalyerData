// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class RabbitQueueDetailTypeQueryBuilder : GraphQlQueryBuilder<RabbitQueueDetailTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "queueCount" },
                new FieldMetadata { Name = "queueInRate", IsComplex = true },
                new FieldMetadata { Name = "queueOutRate", IsComplex = true }
            };

        protected override string TypeName { get { return "RabbitQueueDetailType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RabbitQueueDetailTypeQueryBuilder WithQueueCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("queueCount", alias, new GraphQlDirective[] { include, skip });
        }

        public RabbitQueueDetailTypeQueryBuilder ExceptQueueCount()
        {
            return ExceptField("queueCount");
        }

        public RabbitQueueDetailTypeQueryBuilder WithQueueInRate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("queueInRate", alias, new GraphQlDirective[] { include, skip });
        }

        public RabbitQueueDetailTypeQueryBuilder ExceptQueueInRate()
        {
            return ExceptField("queueInRate");
        }

        public RabbitQueueDetailTypeQueryBuilder WithQueueOutRate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("queueOutRate", alias, new GraphQlDirective[] { include, skip });
        }

        public RabbitQueueDetailTypeQueryBuilder ExceptQueueOutRate()
        {
            return ExceptField("queueOutRate");
        }
    }
}
