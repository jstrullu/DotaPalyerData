// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class FilterLeaderboardHeroRequestType : IGraphQlInputObject
    {
        private InputPropertyInfo _heroIds;
        private InputPropertyInfo _bracketIds;
        private InputPropertyInfo _take;
        private InputPropertyInfo _skip;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<IList<object>>))]
        #endif
        public QueryBuilderParameter<IList<object>> HeroIds
        {
            get { return (QueryBuilderParameter<IList<object>>)_heroIds.Value; }
            set { _heroIds = new InputPropertyInfo { Name = "heroIds", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<IList<RankBracket>>))]
        #endif
        public QueryBuilderParameter<IList<RankBracket>> BracketIds
        {
            get { return (QueryBuilderParameter<IList<RankBracket>>)_bracketIds.Value; }
            set { _bracketIds = new InputPropertyInfo { Name = "bracketIds", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Take
        {
            get { return (QueryBuilderParameter<int?>)_take.Value; }
            set { _take = new InputPropertyInfo { Name = "take", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Skip
        {
            get { return (QueryBuilderParameter<int?>)_skip.Value; }
            set { _skip = new InputPropertyInfo { Name = "skip", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_heroIds.Name != null) yield return _heroIds;
            if (_bracketIds.Name != null) yield return _bracketIds;
            if (_take.Name != null) yield return _take;
            if (_skip.Name != null) yield return _skip;
        }
    }
}
