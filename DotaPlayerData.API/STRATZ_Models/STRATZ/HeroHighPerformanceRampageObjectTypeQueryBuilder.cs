// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class HeroHighPerformanceRampageObjectTypeQueryBuilder : GraphQlQueryBuilder<HeroHighPerformanceRampageObjectTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "endDateTime", IsComplex = true },
                new FieldMetadata { Name = "time" },
                new FieldMetadata { Name = "playerName" },
                new FieldMetadata { Name = "steamId", IsComplex = true }
            };

        protected override string TypeName { get { return "HeroHighPerformanceRampageObjectType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public HeroHighPerformanceRampageObjectTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder WithEndDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("endDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder ExceptEndDateTime()
        {
            return ExceptField("endDateTime");
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder WithPlayerName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("playerName", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder ExceptPlayerName()
        {
            return ExceptField("playerName");
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder WithSteamId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamId", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroHighPerformanceRampageObjectTypeQueryBuilder ExceptSteamId()
        {
            return ExceptField("steamId");
        }
    }
}
