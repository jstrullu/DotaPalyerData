// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class VendorQueryQueryBuilder : GraphQlQueryBuilder<VendorQueryQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "dotaNext", IsComplex = true, QueryBuilderType = typeof(DotaNextQueryQueryBuilder) },
                new FieldMetadata { Name = "twitchTracker", IsComplex = true, QueryBuilderType = typeof(TwitchTrackerPlayerTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "VendorQuery"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public VendorQueryQueryBuilder WithDotaNext(DotaNextQueryQueryBuilder dotaNextQueryQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dotaNext", alias, dotaNextQueryQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public VendorQueryQueryBuilder ExceptDotaNext()
        {
            return ExceptField("dotaNext");
        }

        public VendorQueryQueryBuilder WithTwitchTracker(TwitchTrackerPlayerTypeQueryBuilder twitchTrackerPlayerTypeQueryBuilder, QueryBuilderParameter<object> steamAccountId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "steamAccountId", ArgumentValue = steamAccountId} );
            return WithObjectField("twitchTracker", alias, twitchTrackerPlayerTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public VendorQueryQueryBuilder ExceptTwitchTracker()
        {
            return ExceptField("twitchTracker");
        }
    }
}
