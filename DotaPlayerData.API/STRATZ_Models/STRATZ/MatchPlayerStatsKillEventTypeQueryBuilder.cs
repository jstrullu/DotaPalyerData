// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchPlayerStatsKillEventTypeQueryBuilder : GraphQlQueryBuilder<MatchPlayerStatsKillEventTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "time" },
                new FieldMetadata { Name = "target" },
                new FieldMetadata { Name = "byAbility" },
                new FieldMetadata { Name = "byItem" },
                new FieldMetadata { Name = "gold" },
                new FieldMetadata { Name = "xp" },
                new FieldMetadata { Name = "positionX" },
                new FieldMetadata { Name = "positionY" },
                new FieldMetadata { Name = "assist", IsComplex = true },
                new FieldMetadata { Name = "isSolo" },
                new FieldMetadata { Name = "isGank" },
                new FieldMetadata { Name = "isInvisible" },
                new FieldMetadata { Name = "isSmoke" },
                new FieldMetadata { Name = "isTpRecently" }
            };

        protected override string TypeName { get { return "MatchPlayerStatsKillEventType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchPlayerStatsKillEventTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithTarget(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("target", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptTarget()
        {
            return ExceptField("target");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithByAbility(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("byAbility", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptByAbility()
        {
            return ExceptField("byAbility");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithByItem(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("byItem", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptByItem()
        {
            return ExceptField("byItem");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithGold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gold", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptGold()
        {
            return ExceptField("gold");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithXp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xp", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptXp()
        {
            return ExceptField("xp");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithPositionX(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("positionX", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptPositionX()
        {
            return ExceptField("positionX");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithPositionY(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("positionY", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptPositionY()
        {
            return ExceptField("positionY");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithAssist(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assist", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptAssist()
        {
            return ExceptField("assist");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithIsSolo(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isSolo", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptIsSolo()
        {
            return ExceptField("isSolo");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithIsGank(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isGank", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptIsGank()
        {
            return ExceptField("isGank");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithIsInvisible(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isInvisible", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptIsInvisible()
        {
            return ExceptField("isInvisible");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithIsSmoke(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isSmoke", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptIsSmoke()
        {
            return ExceptField("isSmoke");
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder WithIsTpRecently(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isTpRecently", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsKillEventTypeQueryBuilder ExceptIsTpRecently()
        {
            return ExceptField("isTpRecently");
        }
    }
}
