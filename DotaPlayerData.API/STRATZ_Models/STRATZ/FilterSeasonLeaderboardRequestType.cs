// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class FilterSeasonLeaderboardRequestType : IGraphQlInputObject
    {
        private InputPropertyInfo _query;
        private InputPropertyInfo _leaderBoardDivision;
        private InputPropertyInfo _heroId;
        private InputPropertyInfo _position;
        private InputPropertyInfo _countryCode;
        private InputPropertyInfo _teamId;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Query
        {
            get { return (QueryBuilderParameter<string>)_query.Value; }
            set { _query = new InputPropertyInfo { Name = "query", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<LeaderboardDivision?>))]
        #endif
        public QueryBuilderParameter<LeaderboardDivision?> LeaderBoardDivision
        {
            get { return (QueryBuilderParameter<LeaderboardDivision?>)_leaderBoardDivision.Value; }
            set { _leaderBoardDivision = new InputPropertyInfo { Name = "leaderBoardDivision", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<short?>))]
        #endif
        public QueryBuilderParameter<short?> HeroId
        {
            get { return (QueryBuilderParameter<short?>)_heroId.Value; }
            set { _heroId = new InputPropertyInfo { Name = "heroId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<MatchPlayerPositionType?>))]
        #endif
        public QueryBuilderParameter<MatchPlayerPositionType?> Position
        {
            get { return (QueryBuilderParameter<MatchPlayerPositionType?>)_position.Value; }
            set { _position = new InputPropertyInfo { Name = "position", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> CountryCode
        {
            get { return (QueryBuilderParameter<string>)_countryCode.Value; }
            set { _countryCode = new InputPropertyInfo { Name = "countryCode", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> TeamId
        {
            get { return (QueryBuilderParameter<int?>)_teamId.Value; }
            set { _teamId = new InputPropertyInfo { Name = "teamId", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_query.Name != null) yield return _query;
            if (_leaderBoardDivision.Name != null) yield return _leaderBoardDivision;
            if (_heroId.Name != null) yield return _heroId;
            if (_position.Name != null) yield return _position;
            if (_countryCode.Name != null) yield return _countryCode;
            if (_teamId.Name != null) yield return _teamId;
        }
    }
}
