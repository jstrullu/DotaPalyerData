// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class YogurtMutationQueryBuilder : GraphQlQueryBuilder<YogurtMutationQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "createTeam", IsComplex = true, QueryBuilderType = typeof(MatchReplayUploadTeamTypeQueryBuilder) },
                new FieldMetadata { Name = "updateTeam" },
                new FieldMetadata { Name = "addTeamMember" },
                new FieldMetadata { Name = "updateTeamMember" },
                new FieldMetadata { Name = "setTeamMemberDefaultTeam" },
                new FieldMetadata { Name = "removeTeamMember" },
                new FieldMetadata { Name = "update" },
                new FieldMetadata { Name = "validate" },
                new FieldMetadata { Name = "invalidate" },
                new FieldMetadata { Name = "delete" },
                new FieldMetadata { Name = "linkSeriesId" },
                new FieldMetadata { Name = "removeSeriesId" },
                new FieldMetadata { Name = "importMatch" },
                new FieldMetadata { Name = "importPickBans" }
            };

        protected override string TypeName { get { return "YogurtMutation"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public YogurtMutationQueryBuilder WithCreateTeam(MatchReplayUploadTeamTypeQueryBuilder matchReplayUploadTeamTypeQueryBuilder, QueryBuilderParameter<string> matchReplayUploadTeamName, QueryBuilderParameter<string> emailAddress, QueryBuilderParameter<int> teamId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamName", ArgumentValue = matchReplayUploadTeamName} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "emailAddress", ArgumentValue = emailAddress} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "teamId", ArgumentValue = teamId} );
            return WithObjectField("createTeam", alias, matchReplayUploadTeamTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptCreateTeam()
        {
            return ExceptField("createTeam");
        }

        public YogurtMutationQueryBuilder WithUpdateTeam(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<string> matchReplayUploadTeamName = null, QueryBuilderParameter<int?> teamId = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            if (matchReplayUploadTeamName != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamName", ArgumentValue = matchReplayUploadTeamName} );

            if (teamId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "teamId", ArgumentValue = teamId} );

            return WithScalarField("updateTeam", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptUpdateTeam()
        {
            return ExceptField("updateTeam");
        }

        public YogurtMutationQueryBuilder WithAddTeamMember(QueryBuilderParameter<object> steamAccountId, QueryBuilderParameter<object> matchReplayUploadTeamId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "steamAccountId", ArgumentValue = steamAccountId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            return WithScalarField("addTeamMember", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptAddTeamMember()
        {
            return ExceptField("addTeamMember");
        }

        public YogurtMutationQueryBuilder WithUpdateTeamMember(QueryBuilderParameter<Guid> captainJackIdentityId, QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<bool> isAdmin, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "captainJackIdentityId", ArgumentValue = captainJackIdentityId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "isAdmin", ArgumentValue = isAdmin} );
            return WithScalarField("updateTeamMember", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptUpdateTeamMember()
        {
            return ExceptField("updateTeamMember");
        }

        public YogurtMutationQueryBuilder WithSetTeamMemberDefaultTeam(QueryBuilderParameter<Guid> captainJackIdentityId, QueryBuilderParameter<object> matchReplayUploadTeamId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "captainJackIdentityId", ArgumentValue = captainJackIdentityId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            return WithScalarField("setTeamMemberDefaultTeam", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptSetTeamMemberDefaultTeam()
        {
            return ExceptField("setTeamMemberDefaultTeam");
        }

        public YogurtMutationQueryBuilder WithRemoveTeamMember(QueryBuilderParameter<Guid> captainJackIdentityId, QueryBuilderParameter<object> matchReplayUploadTeamId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "captainJackIdentityId", ArgumentValue = captainJackIdentityId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            return WithScalarField("removeTeamMember", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptRemoveTeamMember()
        {
            return ExceptField("removeTeamMember");
        }

        public YogurtMutationQueryBuilder WithUpdate(QueryBuilderParameter<UpdateMatchReplayUploadObjectType> updateMatchReplayUploadObject, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "updateMatchReplayUploadObject", ArgumentValue = updateMatchReplayUploadObject} );
            return WithScalarField("update", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptUpdate()
        {
            return ExceptField("update");
        }

        public YogurtMutationQueryBuilder WithValidate(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<object> matchId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchId", ArgumentValue = matchId} );
            return WithScalarField("validate", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptValidate()
        {
            return ExceptField("validate");
        }

        public YogurtMutationQueryBuilder WithInvalidate(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<object> matchId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchId", ArgumentValue = matchId} );
            return WithScalarField("invalidate", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptInvalidate()
        {
            return ExceptField("invalidate");
        }

        public YogurtMutationQueryBuilder WithDelete(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<object> matchId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchId", ArgumentValue = matchId} );
            return WithScalarField("delete", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptDelete()
        {
            return ExceptField("delete");
        }

        public YogurtMutationQueryBuilder WithLinkSeriesId(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<IEnumerable<object>> matchIds, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchIds", ArgumentValue = matchIds} );
            return WithScalarField("linkSeriesId", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptLinkSeriesId()
        {
            return ExceptField("linkSeriesId");
        }

        public YogurtMutationQueryBuilder WithRemoveSeriesId(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<IEnumerable<object>> matchIds, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchIds", ArgumentValue = matchIds} );
            return WithScalarField("removeSeriesId", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptRemoveSeriesId()
        {
            return ExceptField("removeSeriesId");
        }

        public YogurtMutationQueryBuilder WithImportMatch(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<object> matchId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchId", ArgumentValue = matchId} );
            return WithScalarField("importMatch", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptImportMatch()
        {
            return ExceptField("importMatch");
        }

        public YogurtMutationQueryBuilder WithImportPickBans(QueryBuilderParameter<object> matchReplayUploadTeamId, QueryBuilderParameter<object> matchId, QueryBuilderParameter<IEnumerable<ImportPickBanType>> pickBans, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchReplayUploadTeamId", ArgumentValue = matchReplayUploadTeamId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "matchId", ArgumentValue = matchId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "pickBans", ArgumentValue = pickBans} );
            return WithScalarField("importPickBans", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public YogurtMutationQueryBuilder ExceptImportPickBans()
        {
            return ExceptField("importPickBans");
        }
    }
}
