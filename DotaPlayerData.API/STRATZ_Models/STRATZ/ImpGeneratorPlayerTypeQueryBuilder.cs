// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class ImpGeneratorPlayerTypeQueryBuilder : GraphQlQueryBuilder<ImpGeneratorPlayerTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "winChance", IsComplex = true },
                new FieldMetadata { Name = "winRateByPlayerMinuteValues", IsComplex = true },
                new FieldMetadata { Name = "events", IsComplex = true, QueryBuilderType = typeof(ImpGeneratorPlayerEventTypeQueryBuilder) },
                new FieldMetadata { Name = "impValues", IsComplex = true }
            };

        protected override string TypeName { get { return "ImpGeneratorPlayerType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ImpGeneratorPlayerTypeQueryBuilder WithWinChance(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winChance", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerTypeQueryBuilder ExceptWinChance()
        {
            return ExceptField("winChance");
        }

        public ImpGeneratorPlayerTypeQueryBuilder WithWinRateByPlayerMinuteValues(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winRateByPlayerMinuteValues", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerTypeQueryBuilder ExceptWinRateByPlayerMinuteValues()
        {
            return ExceptField("winRateByPlayerMinuteValues");
        }

        public ImpGeneratorPlayerTypeQueryBuilder WithEvents(ImpGeneratorPlayerEventTypeQueryBuilder impGeneratorPlayerEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("events", alias, impGeneratorPlayerEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerTypeQueryBuilder ExceptEvents()
        {
            return ExceptField("events");
        }

        public ImpGeneratorPlayerTypeQueryBuilder WithImpValues(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("impValues", alias, new GraphQlDirective[] { include, skip });
        }

        public ImpGeneratorPlayerTypeQueryBuilder ExceptImpValues()
        {
            return ExceptField("impValues");
        }
    }
}
