// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class ServerStatusTypeQueryBuilder : GraphQlQueryBuilder<ServerStatusTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "isRedisOnline" },
                new FieldMetadata { Name = "steamApiDetail", IsComplex = true, QueryBuilderType = typeof(SteamApiDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "rabbitDetail", IsComplex = true, QueryBuilderType = typeof(RabbitDetailTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "ServerStatusType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ServerStatusTypeQueryBuilder WithIsRedisOnline(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isRedisOnline", alias, new GraphQlDirective[] { include, skip });
        }

        public ServerStatusTypeQueryBuilder ExceptIsRedisOnline()
        {
            return ExceptField("isRedisOnline");
        }

        public ServerStatusTypeQueryBuilder WithSteamApiDetail(SteamApiDetailTypeQueryBuilder steamApiDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamApiDetail", alias, steamApiDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ServerStatusTypeQueryBuilder ExceptSteamApiDetail()
        {
            return ExceptField("steamApiDetail");
        }

        public ServerStatusTypeQueryBuilder WithRabbitDetail(RabbitDetailTypeQueryBuilder rabbitDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("rabbitDetail", alias, rabbitDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ServerStatusTypeQueryBuilder ExceptRabbitDetail()
        {
            return ExceptField("rabbitDetail");
        }
    }
}
