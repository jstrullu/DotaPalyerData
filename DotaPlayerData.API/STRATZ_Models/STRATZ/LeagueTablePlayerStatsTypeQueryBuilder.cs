// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueTablePlayerStatsTypeQueryBuilder : GraphQlQueryBuilder<LeagueTablePlayerStatsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "kills" },
                new FieldMetadata { Name = "deaths" },
                new FieldMetadata { Name = "assists" },
                new FieldMetadata { Name = "cs" },
                new FieldMetadata { Name = "gpm" },
                new FieldMetadata { Name = "xpm" },
                new FieldMetadata { Name = "heal" },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "towerDamage" },
                new FieldMetadata { Name = "killContribution" }
            };

        protected override string TypeName { get { return "LeagueTablePlayerStatsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueTablePlayerStatsTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithGpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptGpm()
        {
            return ExceptField("gpm");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithXpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptXpm()
        {
            return ExceptField("xpm");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithHeal(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heal", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptHeal()
        {
            return ExceptField("heal");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public LeagueTablePlayerStatsTypeQueryBuilder WithKillContribution(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killContribution", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTablePlayerStatsTypeQueryBuilder ExceptKillContribution()
        {
            return ExceptField("killContribution");
        }
    }
}
