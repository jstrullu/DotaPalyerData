// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerUpdateAttributeDetailTypeQueryBuilder : GraphQlQueryBuilder<PlayerUpdateAttributeDetailTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "time" },
                new FieldMetadata { Name = "agi" },
                new FieldMetadata { Name = "int" },
                new FieldMetadata { Name = "str" }
            };

        protected override string TypeName { get { return "PlayerUpdateAttributeDetailType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerUpdateAttributeDetailTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder WithAgi(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("agi", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder ExceptAgi()
        {
            return ExceptField("agi");
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder WithInt(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("int", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder ExceptInt()
        {
            return ExceptField("int");
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder WithStr(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("str", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerUpdateAttributeDetailTypeQueryBuilder ExceptStr()
        {
            return ExceptField("str");
        }
    }
}
