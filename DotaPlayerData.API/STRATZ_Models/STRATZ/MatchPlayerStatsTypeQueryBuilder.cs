// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchPlayerStatsTypeQueryBuilder : GraphQlQueryBuilder<MatchPlayerStatsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "gameVersionId", IsComplex = true },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "killEvents", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsKillEventTypeQueryBuilder) },
                new FieldMetadata { Name = "deathEvents", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsDeathEventTypeQueryBuilder) },
                new FieldMetadata { Name = "assistEvents", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsAssistEventTypeQueryBuilder) },
                new FieldMetadata { Name = "lastHitsPerMinute", IsComplex = true },
                new FieldMetadata { Name = "goldPerMinute", IsComplex = true },
                new FieldMetadata { Name = "experiencePerMinute", IsComplex = true },
                new FieldMetadata { Name = "healPerMinute", IsComplex = true },
                new FieldMetadata { Name = "heroDamagePerMinute", IsComplex = true },
                new FieldMetadata { Name = "towerDamagePerMinute", IsComplex = true },
                new FieldMetadata { Name = "towerDamageReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsTowerDamageReportTypeQueryBuilder) },
                new FieldMetadata { Name = "courierKills", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsCourierKillEventTypeQueryBuilder) },
                new FieldMetadata { Name = "wards", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsWardEventTypeQueryBuilder) },
                new FieldMetadata { Name = "itemPurchases", IsComplex = true, QueryBuilderType = typeof(MatchPlayerItemPurchaseEventTypeQueryBuilder) },
                new FieldMetadata { Name = "itemUsed", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsItemUsedEventTypeQueryBuilder) },
                new FieldMetadata { Name = "allTalks", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsAllTalkEventTypeQueryBuilder) },
                new FieldMetadata { Name = "chatWheels", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsChatWheelEventTypeQueryBuilder) },
                new FieldMetadata { Name = "actionsPerMinute", IsComplex = true },
                new FieldMetadata { Name = "actionReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsActionReportTypeQueryBuilder) },
                new FieldMetadata { Name = "locationReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsLocationReportTypeQueryBuilder) },
                new FieldMetadata { Name = "farmDistributionReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsFarmDistributionReportTypeQueryBuilder) },
                new FieldMetadata { Name = "runes", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsRuneEventTypeQueryBuilder) },
                new FieldMetadata { Name = "abilityCastReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsAbilityCastReportTypeQueryBuilder) },
                new FieldMetadata { Name = "heroDamageReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsHeroDamageReportTypeQueryBuilder) },
                new FieldMetadata { Name = "inventoryReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerInventoryTypeQueryBuilder) },
                new FieldMetadata { Name = "networthPerMinute", IsComplex = true },
                new FieldMetadata { Name = "campStack", IsComplex = true },
                new FieldMetadata { Name = "matchPlayerBuffEvent", IsComplex = true, QueryBuilderType = typeof(MatchPlayerStatsBuffEventTypeQueryBuilder) },
                new FieldMetadata { Name = "deniesPerMinute", IsComplex = true },
                new FieldMetadata { Name = "impPerMinute", IsComplex = true },
                new FieldMetadata { Name = "tripsFountainPerMinute", IsComplex = true },
                new FieldMetadata { Name = "spiritBearInventoryReport", IsComplex = true, QueryBuilderType = typeof(MatchPlayerSpiritBearInventoryTypeQueryBuilder) },
                new FieldMetadata { Name = "heroDamageReceivedPerMinute", IsComplex = true },
                new FieldMetadata { Name = "wardDestruction", IsComplex = true, QueryBuilderType = typeof(MatchPlayerWardDestuctionObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchPlayerStatsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchPlayerStatsTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public MatchPlayerStatsTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public MatchPlayerStatsTypeQueryBuilder WithGameVersionId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gameVersionId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptGameVersionId()
        {
            return ExceptField("gameVersionId");
        }

        public MatchPlayerStatsTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public MatchPlayerStatsTypeQueryBuilder WithKillEvents(MatchPlayerStatsKillEventTypeQueryBuilder matchPlayerStatsKillEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("killEvents", alias, matchPlayerStatsKillEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptKillEvents()
        {
            return ExceptField("killEvents");
        }

        public MatchPlayerStatsTypeQueryBuilder WithDeathEvents(MatchPlayerStatsDeathEventTypeQueryBuilder matchPlayerStatsDeathEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("deathEvents", alias, matchPlayerStatsDeathEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptDeathEvents()
        {
            return ExceptField("deathEvents");
        }

        public MatchPlayerStatsTypeQueryBuilder WithAssistEvents(MatchPlayerStatsAssistEventTypeQueryBuilder matchPlayerStatsAssistEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("assistEvents", alias, matchPlayerStatsAssistEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptAssistEvents()
        {
            return ExceptField("assistEvents");
        }

        public MatchPlayerStatsTypeQueryBuilder WithLastHitsPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastHitsPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptLastHitsPerMinute()
        {
            return ExceptField("lastHitsPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithGoldPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptGoldPerMinute()
        {
            return ExceptField("goldPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithExperiencePerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("experiencePerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptExperiencePerMinute()
        {
            return ExceptField("experiencePerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithHealPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("healPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptHealPerMinute()
        {
            return ExceptField("healPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithHeroDamagePerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamagePerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptHeroDamagePerMinute()
        {
            return ExceptField("heroDamagePerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithTowerDamagePerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamagePerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptTowerDamagePerMinute()
        {
            return ExceptField("towerDamagePerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithTowerDamageReport(MatchPlayerStatsTowerDamageReportTypeQueryBuilder matchPlayerStatsTowerDamageReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("towerDamageReport", alias, matchPlayerStatsTowerDamageReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptTowerDamageReport()
        {
            return ExceptField("towerDamageReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithCourierKills(MatchPlayerStatsCourierKillEventTypeQueryBuilder matchPlayerStatsCourierKillEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("courierKills", alias, matchPlayerStatsCourierKillEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptCourierKills()
        {
            return ExceptField("courierKills");
        }

        public MatchPlayerStatsTypeQueryBuilder WithWards(MatchPlayerStatsWardEventTypeQueryBuilder matchPlayerStatsWardEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("wards", alias, matchPlayerStatsWardEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptWards()
        {
            return ExceptField("wards");
        }

        public MatchPlayerStatsTypeQueryBuilder WithItemPurchases(MatchPlayerItemPurchaseEventTypeQueryBuilder matchPlayerItemPurchaseEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("itemPurchases", alias, matchPlayerItemPurchaseEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptItemPurchases()
        {
            return ExceptField("itemPurchases");
        }

        public MatchPlayerStatsTypeQueryBuilder WithItemUsed(MatchPlayerStatsItemUsedEventTypeQueryBuilder matchPlayerStatsItemUsedEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("itemUsed", alias, matchPlayerStatsItemUsedEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptItemUsed()
        {
            return ExceptField("itemUsed");
        }

        public MatchPlayerStatsTypeQueryBuilder WithAllTalks(MatchPlayerStatsAllTalkEventTypeQueryBuilder matchPlayerStatsAllTalkEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("allTalks", alias, matchPlayerStatsAllTalkEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptAllTalks()
        {
            return ExceptField("allTalks");
        }

        public MatchPlayerStatsTypeQueryBuilder WithChatWheels(MatchPlayerStatsChatWheelEventTypeQueryBuilder matchPlayerStatsChatWheelEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("chatWheels", alias, matchPlayerStatsChatWheelEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptChatWheels()
        {
            return ExceptField("chatWheels");
        }

        public MatchPlayerStatsTypeQueryBuilder WithActionsPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("actionsPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptActionsPerMinute()
        {
            return ExceptField("actionsPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithActionReport(MatchPlayerStatsActionReportTypeQueryBuilder matchPlayerStatsActionReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("actionReport", alias, matchPlayerStatsActionReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptActionReport()
        {
            return ExceptField("actionReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithLocationReport(MatchPlayerStatsLocationReportTypeQueryBuilder matchPlayerStatsLocationReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("locationReport", alias, matchPlayerStatsLocationReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptLocationReport()
        {
            return ExceptField("locationReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithFarmDistributionReport(MatchPlayerStatsFarmDistributionReportTypeQueryBuilder matchPlayerStatsFarmDistributionReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("farmDistributionReport", alias, matchPlayerStatsFarmDistributionReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptFarmDistributionReport()
        {
            return ExceptField("farmDistributionReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithRunes(MatchPlayerStatsRuneEventTypeQueryBuilder matchPlayerStatsRuneEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("runes", alias, matchPlayerStatsRuneEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptRunes()
        {
            return ExceptField("runes");
        }

        public MatchPlayerStatsTypeQueryBuilder WithAbilityCastReport(MatchPlayerStatsAbilityCastReportTypeQueryBuilder matchPlayerStatsAbilityCastReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("abilityCastReport", alias, matchPlayerStatsAbilityCastReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptAbilityCastReport()
        {
            return ExceptField("abilityCastReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithHeroDamageReport(MatchPlayerStatsHeroDamageReportTypeQueryBuilder matchPlayerStatsHeroDamageReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("heroDamageReport", alias, matchPlayerStatsHeroDamageReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptHeroDamageReport()
        {
            return ExceptField("heroDamageReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithInventoryReport(MatchPlayerInventoryTypeQueryBuilder matchPlayerInventoryTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("inventoryReport", alias, matchPlayerInventoryTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptInventoryReport()
        {
            return ExceptField("inventoryReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithNetworthPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networthPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptNetworthPerMinute()
        {
            return ExceptField("networthPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithCampStack(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("campStack", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptCampStack()
        {
            return ExceptField("campStack");
        }

        public MatchPlayerStatsTypeQueryBuilder WithMatchPlayerBuffEvent(MatchPlayerStatsBuffEventTypeQueryBuilder matchPlayerStatsBuffEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchPlayerBuffEvent", alias, matchPlayerStatsBuffEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptMatchPlayerBuffEvent()
        {
            return ExceptField("matchPlayerBuffEvent");
        }

        public MatchPlayerStatsTypeQueryBuilder WithDeniesPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deniesPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptDeniesPerMinute()
        {
            return ExceptField("deniesPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithImpPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("impPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptImpPerMinute()
        {
            return ExceptField("impPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithTripsFountainPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("tripsFountainPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptTripsFountainPerMinute()
        {
            return ExceptField("tripsFountainPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithSpiritBearInventoryReport(MatchPlayerSpiritBearInventoryTypeQueryBuilder matchPlayerSpiritBearInventoryTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("spiritBearInventoryReport", alias, matchPlayerSpiritBearInventoryTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptSpiritBearInventoryReport()
        {
            return ExceptField("spiritBearInventoryReport");
        }

        public MatchPlayerStatsTypeQueryBuilder WithHeroDamageReceivedPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamageReceivedPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptHeroDamageReceivedPerMinute()
        {
            return ExceptField("heroDamageReceivedPerMinute");
        }

        public MatchPlayerStatsTypeQueryBuilder WithWardDestruction(MatchPlayerWardDestuctionObjectTypeQueryBuilder matchPlayerWardDestuctionObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("wardDestruction", alias, matchPlayerWardDestuctionObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsTypeQueryBuilder ExceptWardDestruction()
        {
            return ExceptField("wardDestruction");
        }
    }
}
