// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchPlayerSpiritBearInventoryTypeQueryBuilder : GraphQlQueryBuilder<MatchPlayerSpiritBearInventoryTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "item0Id" },
                new FieldMetadata { Name = "item1Id" },
                new FieldMetadata { Name = "item2Id" },
                new FieldMetadata { Name = "item3Id" },
                new FieldMetadata { Name = "item4Id" },
                new FieldMetadata { Name = "item5Id" },
                new FieldMetadata { Name = "backPack0Id" },
                new FieldMetadata { Name = "backPack1Id" },
                new FieldMetadata { Name = "backPack2Id" },
                new FieldMetadata { Name = "neutral0Id" }
            };

        protected override string TypeName { get { return "MatchPlayerSpiritBearInventoryType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem0Id()
        {
            return ExceptField("item0Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem1Id()
        {
            return ExceptField("item1Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem2Id()
        {
            return ExceptField("item2Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem3Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item3Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem3Id()
        {
            return ExceptField("item3Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem4Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item4Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem4Id()
        {
            return ExceptField("item4Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithItem5Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item5Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptItem5Id()
        {
            return ExceptField("item5Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithBackPack0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backPack0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptBackPack0Id()
        {
            return ExceptField("backPack0Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithBackPack1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backPack1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptBackPack1Id()
        {
            return ExceptField("backPack1Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithBackPack2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backPack2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptBackPack2Id()
        {
            return ExceptField("backPack2Id");
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder WithNeutral0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("neutral0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerSpiritBearInventoryTypeQueryBuilder ExceptNeutral0Id()
        {
            return ExceptField("neutral0Id");
        }
    }
}
