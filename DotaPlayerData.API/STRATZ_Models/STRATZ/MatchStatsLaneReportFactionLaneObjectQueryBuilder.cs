// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchStatsLaneReportFactionLaneObjectQueryBuilder : GraphQlQueryBuilder<MatchStatsLaneReportFactionLaneObjectQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "meleeCount" },
                new FieldMetadata { Name = "rangeCount" },
                new FieldMetadata { Name = "siegeCount" },
                new FieldMetadata { Name = "denyCount" },
                new FieldMetadata { Name = "neutralCount" }
            };

        protected override string TypeName { get { return "MatchStatsLaneReportFactionLaneObject"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder WithMeleeCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("meleeCount", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder ExceptMeleeCount()
        {
            return ExceptField("meleeCount");
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder WithRangeCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("rangeCount", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder ExceptRangeCount()
        {
            return ExceptField("rangeCount");
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder WithSiegeCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("siegeCount", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder ExceptSiegeCount()
        {
            return ExceptField("siegeCount");
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder WithDenyCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("denyCount", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder ExceptDenyCount()
        {
            return ExceptField("denyCount");
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder WithNeutralCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("neutralCount", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionLaneObjectQueryBuilder ExceptNeutralCount()
        {
            return ExceptField("neutralCount");
        }
    }
}
