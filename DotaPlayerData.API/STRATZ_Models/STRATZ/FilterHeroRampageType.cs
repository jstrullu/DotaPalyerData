// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class FilterHeroRampageType : IGraphQlInputObject
    {
        private InputPropertyInfo _heroId;
        private InputPropertyInfo _bracketBasicIds;
        private InputPropertyInfo _take;
        private InputPropertyInfo _after;
        private InputPropertyInfo _before;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<short?>))]
        #endif
        public QueryBuilderParameter<short?> HeroId
        {
            get { return (QueryBuilderParameter<short?>)_heroId.Value; }
            set { _heroId = new InputPropertyInfo { Name = "heroId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<IList<RankBracketBasicEnum>>))]
        #endif
        public QueryBuilderParameter<IList<RankBracketBasicEnum>> BracketBasicIds
        {
            get { return (QueryBuilderParameter<IList<RankBracketBasicEnum>>)_bracketBasicIds.Value; }
            set { _bracketBasicIds = new InputPropertyInfo { Name = "bracketBasicIds", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Take
        {
            get { return (QueryBuilderParameter<int?>)_take.Value; }
            set { _take = new InputPropertyInfo { Name = "take", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> After
        {
            get { return (QueryBuilderParameter<long?>)_after.Value; }
            set { _after = new InputPropertyInfo { Name = "after", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> Before
        {
            get { return (QueryBuilderParameter<long?>)_before.Value; }
            set { _before = new InputPropertyInfo { Name = "before", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_heroId.Name != null) yield return _heroId;
            if (_bracketBasicIds.Name != null) yield return _bracketBasicIds;
            if (_take.Name != null) yield return _take;
            if (_after.Name != null) yield return _after;
            if (_before.Name != null) yield return _before;
        }
    }
}
