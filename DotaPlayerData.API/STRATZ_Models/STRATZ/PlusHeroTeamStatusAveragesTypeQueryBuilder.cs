// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlusHeroTeamStatusAveragesTypeQueryBuilder : GraphQlQueryBuilder<PlusHeroTeamStatusAveragesTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "cs", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "towerDamage", IsComplex = true },
                new FieldMetadata { Name = "physicalDamage", IsComplex = true },
                new FieldMetadata { Name = "magicalDamage", IsComplex = true },
                new FieldMetadata { Name = "physicalDamageReceived", IsComplex = true },
                new FieldMetadata { Name = "magicalDamageReceived", IsComplex = true },
                new FieldMetadata { Name = "disableCount", IsComplex = true },
                new FieldMetadata { Name = "disableDuration", IsComplex = true },
                new FieldMetadata { Name = "stunCount", IsComplex = true },
                new FieldMetadata { Name = "stunDuration", IsComplex = true },
                new FieldMetadata { Name = "slowCount", IsComplex = true },
                new FieldMetadata { Name = "slowDuration", IsComplex = true },
                new FieldMetadata { Name = "healingAllies", IsComplex = true },
                new FieldMetadata { Name = "purgeModifiers", IsComplex = true },
                new FieldMetadata { Name = "weakenCount", IsComplex = true },
                new FieldMetadata { Name = "weakenDuration", IsComplex = true },
                new FieldMetadata { Name = "pureDamageReceived", IsComplex = true },
                new FieldMetadata { Name = "pureDamage", IsComplex = true }
            };

        protected override string TypeName { get { return "PlusHeroTeamStatusAveragesType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithPhysicalDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("physicalDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptPhysicalDamage()
        {
            return ExceptField("physicalDamage");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithMagicalDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("magicalDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptMagicalDamage()
        {
            return ExceptField("magicalDamage");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithPhysicalDamageReceived(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("physicalDamageReceived", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptPhysicalDamageReceived()
        {
            return ExceptField("physicalDamageReceived");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithMagicalDamageReceived(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("magicalDamageReceived", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptMagicalDamageReceived()
        {
            return ExceptField("magicalDamageReceived");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithDisableCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("disableCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptDisableCount()
        {
            return ExceptField("disableCount");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithDisableDuration(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("disableDuration", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptDisableDuration()
        {
            return ExceptField("disableDuration");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithStunCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stunCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptStunCount()
        {
            return ExceptField("stunCount");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithStunDuration(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stunDuration", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptStunDuration()
        {
            return ExceptField("stunDuration");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithSlowCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("slowCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptSlowCount()
        {
            return ExceptField("slowCount");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithSlowDuration(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("slowDuration", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptSlowDuration()
        {
            return ExceptField("slowDuration");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithHealingAllies(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("healingAllies", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptHealingAllies()
        {
            return ExceptField("healingAllies");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithPurgeModifiers(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("purgeModifiers", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptPurgeModifiers()
        {
            return ExceptField("purgeModifiers");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithWeakenCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("weakenCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptWeakenCount()
        {
            return ExceptField("weakenCount");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithWeakenDuration(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("weakenDuration", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptWeakenDuration()
        {
            return ExceptField("weakenDuration");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithPureDamageReceived(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pureDamageReceived", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptPureDamageReceived()
        {
            return ExceptField("pureDamageReceived");
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder WithPureDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pureDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusHeroTeamStatusAveragesTypeQueryBuilder ExceptPureDamage()
        {
            return ExceptField("pureDamage");
        }
    }
}
