// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class TwitchTrackerPlayerMatchTypeQueryBuilder : GraphQlQueryBuilder<TwitchTrackerPlayerMatchTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "heroId" },
                new FieldMetadata { Name = "lane" },
                new FieldMetadata { Name = "role" },
                new FieldMetadata { Name = "position" },
                new FieldMetadata { Name = "killCount", IsComplex = true },
                new FieldMetadata { Name = "deathCount", IsComplex = true },
                new FieldMetadata { Name = "assistCount", IsComplex = true },
                new FieldMetadata { Name = "endDateTime", IsComplex = true },
                new FieldMetadata { Name = "isVictory" },
                new FieldMetadata { Name = "award", IsComplex = true }
            };

        protected override string TypeName { get { return "TwitchTrackerPlayerMatchType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithLane(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lane", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptLane()
        {
            return ExceptField("lane");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithRole(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("role", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptRole()
        {
            return ExceptField("role");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithPosition(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("position", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithKillCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killCount", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptKillCount()
        {
            return ExceptField("killCount");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithDeathCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deathCount", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptDeathCount()
        {
            return ExceptField("deathCount");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithAssistCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistCount", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptAssistCount()
        {
            return ExceptField("assistCount");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithEndDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("endDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptEndDateTime()
        {
            return ExceptField("endDateTime");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithIsVictory(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isVictory", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptIsVictory()
        {
            return ExceptField("isVictory");
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder WithAward(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("award", alias, new GraphQlDirective[] { include, skip });
        }

        public TwitchTrackerPlayerMatchTypeQueryBuilder ExceptAward()
        {
            return ExceptField("award");
        }
    }
}
