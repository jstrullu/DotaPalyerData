// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerPerformanceTypeQueryBuilder : GraphQlQueryBuilder<PlayerPerformanceTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "winCount" },
                new FieldMetadata { Name = "streak" },
                new FieldMetadata { Name = "maxStreak" },
                new FieldMetadata { Name = "imp" },
                new FieldMetadata { Name = "rank" },
                new FieldMetadata { Name = "mmrTier" },
                new FieldMetadata { Name = "mmrBracket" },
                new FieldMetadata { Name = "awardMatchCount" },
                new FieldMetadata { Name = "mvpCount" },
                new FieldMetadata { Name = "topCoreCount" },
                new FieldMetadata { Name = "topSupportCount" },
                new FieldMetadata { Name = "kills" },
                new FieldMetadata { Name = "killsAverage", IsComplex = true },
                new FieldMetadata { Name = "deaths" },
                new FieldMetadata { Name = "deathsAverage", IsComplex = true },
                new FieldMetadata { Name = "assists" },
                new FieldMetadata { Name = "assistsAverage", IsComplex = true },
                new FieldMetadata { Name = "cs" },
                new FieldMetadata { Name = "csAverage", IsComplex = true },
                new FieldMetadata { Name = "gpm" },
                new FieldMetadata { Name = "gpmAverage", IsComplex = true },
                new FieldMetadata { Name = "xpm" },
                new FieldMetadata { Name = "xpmAverage", IsComplex = true },
                new FieldMetadata { Name = "composition", IsComplex = true, QueryBuilderType = typeof(PlayerPerformanceCompositionTypeQueryBuilder) },
                new FieldMetadata { Name = "position", IsComplex = true, QueryBuilderType = typeof(PlayerPerformancePositionTypeQueryBuilder) },
                new FieldMetadata { Name = "pickOrder", IsComplex = true }
            };

        protected override string TypeName { get { return "PlayerPerformanceType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerPerformanceTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public PlayerPerformanceTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptWinCount()
        {
            return ExceptField("winCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithStreak(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("streak", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptStreak()
        {
            return ExceptField("streak");
        }

        public PlayerPerformanceTypeQueryBuilder WithMaxStreak(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("maxStreak", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptMaxStreak()
        {
            return ExceptField("maxStreak");
        }

        public PlayerPerformanceTypeQueryBuilder WithImp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("imp", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptImp()
        {
            return ExceptField("imp");
        }

        public PlayerPerformanceTypeQueryBuilder WithRank(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("rank", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptRank()
        {
            return ExceptField("rank");
        }

        public PlayerPerformanceTypeQueryBuilder WithMmrTier(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("mmrTier", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptMmrTier()
        {
            return ExceptField("mmrTier");
        }

        public PlayerPerformanceTypeQueryBuilder WithMmrBracket(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("mmrBracket", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptMmrBracket()
        {
            return ExceptField("mmrBracket");
        }

        public PlayerPerformanceTypeQueryBuilder WithAwardMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("awardMatchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptAwardMatchCount()
        {
            return ExceptField("awardMatchCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithMvpCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("mvpCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptMvpCount()
        {
            return ExceptField("mvpCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithTopCoreCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("topCoreCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptTopCoreCount()
        {
            return ExceptField("topCoreCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithTopSupportCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("topSupportCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptTopSupportCount()
        {
            return ExceptField("topSupportCount");
        }

        public PlayerPerformanceTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public PlayerPerformanceTypeQueryBuilder WithKillsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptKillsAverage()
        {
            return ExceptField("killsAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public PlayerPerformanceTypeQueryBuilder WithDeathsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deathsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptDeathsAverage()
        {
            return ExceptField("deathsAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public PlayerPerformanceTypeQueryBuilder WithAssistsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptAssistsAverage()
        {
            return ExceptField("assistsAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public PlayerPerformanceTypeQueryBuilder WithCsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("csAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptCsAverage()
        {
            return ExceptField("csAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithGpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gpm", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptGpm()
        {
            return ExceptField("gpm");
        }

        public PlayerPerformanceTypeQueryBuilder WithGpmAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gpmAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptGpmAverage()
        {
            return ExceptField("gpmAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithXpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpm", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptXpm()
        {
            return ExceptField("xpm");
        }

        public PlayerPerformanceTypeQueryBuilder WithXpmAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpmAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptXpmAverage()
        {
            return ExceptField("xpmAverage");
        }

        public PlayerPerformanceTypeQueryBuilder WithComposition(PlayerPerformanceCompositionTypeQueryBuilder playerPerformanceCompositionTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("composition", alias, playerPerformanceCompositionTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptComposition()
        {
            return ExceptField("composition");
        }

        public PlayerPerformanceTypeQueryBuilder WithPosition(PlayerPerformancePositionTypeQueryBuilder playerPerformancePositionTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("position", alias, playerPerformancePositionTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }

        public PlayerPerformanceTypeQueryBuilder WithPickOrder(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pickOrder", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerPerformanceTypeQueryBuilder ExceptPickOrder()
        {
            return ExceptField("pickOrder");
        }
    }
}
