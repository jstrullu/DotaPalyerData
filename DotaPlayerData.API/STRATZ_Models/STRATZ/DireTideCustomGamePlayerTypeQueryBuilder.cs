// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class DireTideCustomGamePlayerTypeQueryBuilder : GraphQlQueryBuilder<DireTideCustomGamePlayerTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "playerSlot", IsComplex = true },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(SteamAccountTypeQueryBuilder) },
                new FieldMetadata { Name = "isVictory" },
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "hero", IsComplex = true, QueryBuilderType = typeof(HeroTypeQueryBuilder) },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "assists", IsComplex = true },
                new FieldMetadata { Name = "leaverStatus", IsComplex = true },
                new FieldMetadata { Name = "numLastHits", IsComplex = true },
                new FieldMetadata { Name = "goldPerMinute", IsComplex = true },
                new FieldMetadata { Name = "goldSpent" },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "heroHealing" },
                new FieldMetadata { Name = "networth" },
                new FieldMetadata { Name = "item0Id", IsComplex = true },
                new FieldMetadata { Name = "item1Id", IsComplex = true },
                new FieldMetadata { Name = "item2Id", IsComplex = true },
                new FieldMetadata { Name = "item3Id", IsComplex = true },
                new FieldMetadata { Name = "item4Id", IsComplex = true },
                new FieldMetadata { Name = "item5Id", IsComplex = true },
                new FieldMetadata { Name = "backpack0Id", IsComplex = true },
                new FieldMetadata { Name = "backpack1Id", IsComplex = true },
                new FieldMetadata { Name = "backpack2Id", IsComplex = true },
                new FieldMetadata { Name = "neutral0Id", IsComplex = true },
                new FieldMetadata { Name = "partyId", IsComplex = true },
                new FieldMetadata { Name = "candyLost", IsComplex = true },
                new FieldMetadata { Name = "candyPickedUp", IsComplex = true },
                new FieldMetadata { Name = "candyScored", IsComplex = true }
            };

        protected override string TypeName { get { return "DireTideCustomGamePlayerType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DireTideCustomGamePlayerTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithPlayerSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("playerSlot", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptPlayerSlot()
        {
            return ExceptField("playerSlot");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithSteamAccount(SteamAccountTypeQueryBuilder steamAccountTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, steamAccountTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithIsVictory(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isVictory", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptIsVictory()
        {
            return ExceptField("isVictory");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithHero(HeroTypeQueryBuilder heroTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("hero", alias, heroTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptHero()
        {
            return ExceptField("hero");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithLeaverStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("leaverStatus", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptLeaverStatus()
        {
            return ExceptField("leaverStatus");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithNumLastHits(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numLastHits", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptNumLastHits()
        {
            return ExceptField("numLastHits");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithGoldPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptGoldPerMinute()
        {
            return ExceptField("goldPerMinute");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithGoldSpent(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpent", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptGoldSpent()
        {
            return ExceptField("goldSpent");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithHeroHealing(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroHealing", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptHeroHealing()
        {
            return ExceptField("heroHealing");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithNetworth(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networth", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptNetworth()
        {
            return ExceptField("networth");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem0Id()
        {
            return ExceptField("item0Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem1Id()
        {
            return ExceptField("item1Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem2Id()
        {
            return ExceptField("item2Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem3Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item3Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem3Id()
        {
            return ExceptField("item3Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem4Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item4Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem4Id()
        {
            return ExceptField("item4Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithItem5Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item5Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptItem5Id()
        {
            return ExceptField("item5Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithBackpack0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptBackpack0Id()
        {
            return ExceptField("backpack0Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithBackpack1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptBackpack1Id()
        {
            return ExceptField("backpack1Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithBackpack2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptBackpack2Id()
        {
            return ExceptField("backpack2Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithNeutral0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("neutral0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptNeutral0Id()
        {
            return ExceptField("neutral0Id");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithPartyId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("partyId", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptPartyId()
        {
            return ExceptField("partyId");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithCandyLost(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("candyLost", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptCandyLost()
        {
            return ExceptField("candyLost");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithCandyPickedUp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("candyPickedUp", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptCandyPickedUp()
        {
            return ExceptField("candyPickedUp");
        }

        public DireTideCustomGamePlayerTypeQueryBuilder WithCandyScored(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("candyScored", alias, new GraphQlDirective[] { include, skip });
        }

        public DireTideCustomGamePlayerTypeQueryBuilder ExceptCandyScored()
        {
            return ExceptField("candyScored");
        }
    }
}
