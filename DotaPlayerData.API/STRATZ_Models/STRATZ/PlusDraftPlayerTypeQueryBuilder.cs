// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlusDraftPlayerTypeQueryBuilder : GraphQlQueryBuilder<PlusDraftPlayerTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "slot", IsComplex = true },
                new FieldMetadata { Name = "position" },
                new FieldMetadata { Name = "positionValues", IsComplex = true },
                new FieldMetadata { Name = "heroes", IsComplex = true, QueryBuilderType = typeof(PlusDraftPlayerHeroObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "PlusDraftPlayerType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlusDraftPlayerTypeQueryBuilder WithSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("slot", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusDraftPlayerTypeQueryBuilder ExceptSlot()
        {
            return ExceptField("slot");
        }

        public PlusDraftPlayerTypeQueryBuilder WithPosition(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("position", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusDraftPlayerTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }

        public PlusDraftPlayerTypeQueryBuilder WithPositionValues(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("positionValues", alias, new GraphQlDirective[] { include, skip });
        }

        public PlusDraftPlayerTypeQueryBuilder ExceptPositionValues()
        {
            return ExceptField("positionValues");
        }

        public PlusDraftPlayerTypeQueryBuilder WithHeroes(PlusDraftPlayerHeroObjectTypeQueryBuilder plusDraftPlayerHeroObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("heroes", alias, plusDraftPlayerHeroObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlusDraftPlayerTypeQueryBuilder ExceptHeroes()
        {
            return ExceptField("heroes");
        }
    }
}
