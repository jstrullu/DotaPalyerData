// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class HeroRatingTypeQueryBuilder : GraphQlQueryBuilder<HeroRatingTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "single", IsComplex = true, QueryBuilderType = typeof(HeroRatingObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "dryad", IsComplex = true, QueryBuilderType = typeof(HeroRatingObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "HeroRatingType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public HeroRatingTypeQueryBuilder WithSingle(HeroRatingObjectTypeQueryBuilder heroRatingObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("single", alias, heroRatingObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public HeroRatingTypeQueryBuilder ExceptSingle()
        {
            return ExceptField("single");
        }

        public HeroRatingTypeQueryBuilder WithDryad(HeroRatingObjectTypeQueryBuilder heroRatingObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dryad", alias, heroRatingObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public HeroRatingTypeQueryBuilder ExceptDryad()
        {
            return ExceptField("dryad");
        }
    }
}
