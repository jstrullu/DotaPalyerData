// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class RoshQueryQueryBuilder : GraphQlQueryBuilder<RoshQueryQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "stats", IsComplex = true, QueryBuilderType = typeof(RoshGlobalStatTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "RoshQuery"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RoshQueryQueryBuilder WithStats(RoshGlobalStatTypeQueryBuilder roshGlobalStatTypeQueryBuilder, QueryBuilderParameter<RoshMatchesRequestType> request = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (request != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "request", ArgumentValue = request} );

            return WithObjectField("stats", alias, roshGlobalStatTypeQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public RoshQueryQueryBuilder ExceptStats()
        {
            return ExceptField("stats");
        }
    }
}
