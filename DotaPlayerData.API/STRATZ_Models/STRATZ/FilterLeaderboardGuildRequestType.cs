// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class FilterLeaderboardGuildRequestType : IGraphQlInputObject
    {
        private InputPropertyInfo _orderBy;
        private InputPropertyInfo _order;
        private InputPropertyInfo _region;
        private InputPropertyInfo _isFull;
        private InputPropertyInfo _isUnlocked;
        private InputPropertyInfo _minMemberCount;
        private InputPropertyInfo _maxMemberCount;
        private InputPropertyInfo _memberCount;
        private InputPropertyInfo _language;
        private InputPropertyInfo _createdBeforeDateTime;
        private InputPropertyInfo _createdAfterDateTime;
        private InputPropertyInfo _minRequiredRank;
        private InputPropertyInfo _maxRequiredRank;
        private InputPropertyInfo _take;
        private InputPropertyInfo _skip;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<FilterLeaderboardGuildOrderBy?>))]
        #endif
        public QueryBuilderParameter<FilterLeaderboardGuildOrderBy?> OrderBy
        {
            get { return (QueryBuilderParameter<FilterLeaderboardGuildOrderBy?>)_orderBy.Value; }
            set { _orderBy = new InputPropertyInfo { Name = "orderBy", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<FilterOrder?>))]
        #endif
        public QueryBuilderParameter<FilterOrder?> Order
        {
            get { return (QueryBuilderParameter<FilterOrder?>)_order.Value; }
            set { _order = new InputPropertyInfo { Name = "order", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> Region
        {
            get { return (QueryBuilderParameter<byte?>)_region.Value; }
            set { _region = new InputPropertyInfo { Name = "region", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> IsFull
        {
            get { return (QueryBuilderParameter<bool?>)_isFull.Value; }
            set { _isFull = new InputPropertyInfo { Name = "isFull", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> IsUnlocked
        {
            get { return (QueryBuilderParameter<bool?>)_isUnlocked.Value; }
            set { _isUnlocked = new InputPropertyInfo { Name = "isUnlocked", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> MinMemberCount
        {
            get { return (QueryBuilderParameter<byte?>)_minMemberCount.Value; }
            set { _minMemberCount = new InputPropertyInfo { Name = "minMemberCount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> MaxMemberCount
        {
            get { return (QueryBuilderParameter<byte?>)_maxMemberCount.Value; }
            set { _maxMemberCount = new InputPropertyInfo { Name = "maxMemberCount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> MemberCount
        {
            get { return (QueryBuilderParameter<byte?>)_memberCount.Value; }
            set { _memberCount = new InputPropertyInfo { Name = "memberCount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> Language
        {
            get { return (QueryBuilderParameter<byte?>)_language.Value; }
            set { _language = new InputPropertyInfo { Name = "language", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> CreatedBeforeDateTime
        {
            get { return (QueryBuilderParameter<long?>)_createdBeforeDateTime.Value; }
            set { _createdBeforeDateTime = new InputPropertyInfo { Name = "createdBeforeDateTime", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> CreatedAfterDateTime
        {
            get { return (QueryBuilderParameter<long?>)_createdAfterDateTime.Value; }
            set { _createdAfterDateTime = new InputPropertyInfo { Name = "createdAfterDateTime", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> MinRequiredRank
        {
            get { return (QueryBuilderParameter<long?>)_minRequiredRank.Value; }
            set { _minRequiredRank = new InputPropertyInfo { Name = "minRequiredRank", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<long?>))]
        #endif
        public QueryBuilderParameter<long?> MaxRequiredRank
        {
            get { return (QueryBuilderParameter<long?>)_maxRequiredRank.Value; }
            set { _maxRequiredRank = new InputPropertyInfo { Name = "maxRequiredRank", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Take
        {
            get { return (QueryBuilderParameter<int?>)_take.Value; }
            set { _take = new InputPropertyInfo { Name = "take", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Skip
        {
            get { return (QueryBuilderParameter<int?>)_skip.Value; }
            set { _skip = new InputPropertyInfo { Name = "skip", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_orderBy.Name != null) yield return _orderBy;
            if (_order.Name != null) yield return _order;
            if (_region.Name != null) yield return _region;
            if (_isFull.Name != null) yield return _isFull;
            if (_isUnlocked.Name != null) yield return _isUnlocked;
            if (_minMemberCount.Name != null) yield return _minMemberCount;
            if (_maxMemberCount.Name != null) yield return _maxMemberCount;
            if (_memberCount.Name != null) yield return _memberCount;
            if (_language.Name != null) yield return _language;
            if (_createdBeforeDateTime.Name != null) yield return _createdBeforeDateTime;
            if (_createdAfterDateTime.Name != null) yield return _createdAfterDateTime;
            if (_minRequiredRank.Name != null) yield return _minRequiredRank;
            if (_maxRequiredRank.Name != null) yield return _maxRequiredRank;
            if (_take.Name != null) yield return _take;
            if (_skip.Name != null) yield return _skip;
        }
    }
}
