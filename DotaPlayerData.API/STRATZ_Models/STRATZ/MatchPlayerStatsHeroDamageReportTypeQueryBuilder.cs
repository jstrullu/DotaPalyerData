// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchPlayerStatsHeroDamageReportTypeQueryBuilder : GraphQlQueryBuilder<MatchPlayerStatsHeroDamageReportTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "dealtTotal", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageTotalReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "receivedTotal", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageTotalRecievedReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "dealtTargets", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageTargetReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "receivedTargets", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageTargetReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "dealtSourceAbility", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "receivedSourceAbility", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "dealtSourceItem", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder) },
                new FieldMetadata { Name = "receivedSourceItem", IsComplex = true, QueryBuilderType = typeof(MatchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchPlayerStatsHeroDamageReportType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithDealtTotal(MatchPlayerHeroDamageTotalReportObjectTypeQueryBuilder matchPlayerHeroDamageTotalReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dealtTotal", alias, matchPlayerHeroDamageTotalReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptDealtTotal()
        {
            return ExceptField("dealtTotal");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithReceivedTotal(MatchPlayerHeroDamageTotalRecievedReportObjectTypeQueryBuilder matchPlayerHeroDamageTotalRecievedReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("receivedTotal", alias, matchPlayerHeroDamageTotalRecievedReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptReceivedTotal()
        {
            return ExceptField("receivedTotal");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithDealtTargets(MatchPlayerHeroDamageTargetReportObjectTypeQueryBuilder matchPlayerHeroDamageTargetReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dealtTargets", alias, matchPlayerHeroDamageTargetReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptDealtTargets()
        {
            return ExceptField("dealtTargets");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithReceivedTargets(MatchPlayerHeroDamageTargetReportObjectTypeQueryBuilder matchPlayerHeroDamageTargetReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("receivedTargets", alias, matchPlayerHeroDamageTargetReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptReceivedTargets()
        {
            return ExceptField("receivedTargets");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithDealtSourceAbility(MatchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder matchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dealtSourceAbility", alias, matchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptDealtSourceAbility()
        {
            return ExceptField("dealtSourceAbility");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithReceivedSourceAbility(MatchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder matchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("receivedSourceAbility", alias, matchPlayerHeroDamageSourceAbilityReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptReceivedSourceAbility()
        {
            return ExceptField("receivedSourceAbility");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithDealtSourceItem(MatchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder matchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("dealtSourceItem", alias, matchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptDealtSourceItem()
        {
            return ExceptField("dealtSourceItem");
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder WithReceivedSourceItem(MatchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder matchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("receivedSourceItem", alias, matchPlayerHeroDamageSourceItemReportObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerStatsHeroDamageReportTypeQueryBuilder ExceptReceivedSourceItem()
        {
            return ExceptField("receivedSourceItem");
        }
    }
}
