// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class RabbitDetailTypeQueryBuilder : GraphQlQueryBuilder<RabbitDetailTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "lastUpdated", IsComplex = true },
                new FieldMetadata { Name = "isOnline" },
                new FieldMetadata { Name = "matchHistory", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "matchDetail", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "matchDetailDelay", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "matchStats", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "matchLive", IsComplex = true, QueryBuilderType = typeof(RabbitQueueDetailTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "RabbitDetailType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RabbitDetailTypeQueryBuilder WithLastUpdated(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastUpdated", alias, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptLastUpdated()
        {
            return ExceptField("lastUpdated");
        }

        public RabbitDetailTypeQueryBuilder WithIsOnline(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isOnline", alias, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptIsOnline()
        {
            return ExceptField("isOnline");
        }

        public RabbitDetailTypeQueryBuilder WithMatchHistory(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchHistory", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptMatchHistory()
        {
            return ExceptField("matchHistory");
        }

        public RabbitDetailTypeQueryBuilder WithMatchDetail(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchDetail", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptMatchDetail()
        {
            return ExceptField("matchDetail");
        }

        public RabbitDetailTypeQueryBuilder WithMatchDetailDelay(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchDetailDelay", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptMatchDetailDelay()
        {
            return ExceptField("matchDetailDelay");
        }

        public RabbitDetailTypeQueryBuilder WithMatchStats(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchStats", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptMatchStats()
        {
            return ExceptField("matchStats");
        }

        public RabbitDetailTypeQueryBuilder WithSteamAccount(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }

        public RabbitDetailTypeQueryBuilder WithMatchLive(RabbitQueueDetailTypeQueryBuilder rabbitQueueDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("matchLive", alias, rabbitQueueDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RabbitDetailTypeQueryBuilder ExceptMatchLive()
        {
            return ExceptField("matchLive");
        }
    }
}
