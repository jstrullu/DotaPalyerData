// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class AghanimLabMatchDepthListTypeQueryBuilder : GraphQlQueryBuilder<AghanimLabMatchDepthListTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "selectedElite" },
                new FieldMetadata { Name = "selectedEncounter" },
                new FieldMetadata { Name = "selectedEncounterEnum", IsComplex = true },
                new FieldMetadata { Name = "selectedHidden" },
                new FieldMetadata { Name = "selectedReward" },
                new FieldMetadata { Name = "unselectedElite" },
                new FieldMetadata { Name = "unselectedEncounter" },
                new FieldMetadata { Name = "unselectedHidden" },
                new FieldMetadata { Name = "unselectedReward" },
                new FieldMetadata { Name = "ascensionAbilities", IsComplex = true, QueryBuilderType = typeof(AghanimLabDepthListAscensionAbilitiesObjectTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "AghanimLabMatchDepthListType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AghanimLabMatchDepthListTypeQueryBuilder WithSelectedElite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedElite", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptSelectedElite()
        {
            return ExceptField("selectedElite");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithSelectedEncounter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedEncounter", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptSelectedEncounter()
        {
            return ExceptField("selectedEncounter");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithSelectedEncounterEnum(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedEncounterEnum", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptSelectedEncounterEnum()
        {
            return ExceptField("selectedEncounterEnum");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithSelectedHidden(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedHidden", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptSelectedHidden()
        {
            return ExceptField("selectedHidden");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithSelectedReward(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("selectedReward", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptSelectedReward()
        {
            return ExceptField("selectedReward");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithUnselectedElite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unselectedElite", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptUnselectedElite()
        {
            return ExceptField("unselectedElite");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithUnselectedEncounter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unselectedEncounter", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptUnselectedEncounter()
        {
            return ExceptField("unselectedEncounter");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithUnselectedHidden(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unselectedHidden", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptUnselectedHidden()
        {
            return ExceptField("unselectedHidden");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithUnselectedReward(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unselectedReward", alias, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptUnselectedReward()
        {
            return ExceptField("unselectedReward");
        }

        public AghanimLabMatchDepthListTypeQueryBuilder WithAscensionAbilities(AghanimLabDepthListAscensionAbilitiesObjectTypeQueryBuilder aghanimLabDepthListAscensionAbilitiesObjectTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("ascensionAbilities", alias, aghanimLabDepthListAscensionAbilitiesObjectTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AghanimLabMatchDepthListTypeQueryBuilder ExceptAscensionAbilities()
        {
            return ExceptField("ascensionAbilities");
        }
    }
}
