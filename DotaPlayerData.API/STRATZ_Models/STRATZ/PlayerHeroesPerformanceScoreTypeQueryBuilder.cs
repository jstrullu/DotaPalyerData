// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerHeroesPerformanceScoreTypeQueryBuilder : GraphQlQueryBuilder<PlayerHeroesPerformanceScoreTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "id" },
                new FieldMetadata { Name = "score" },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "winCount" },
                new FieldMetadata { Name = "imp" }
            };

        protected override string TypeName { get { return "PlayerHeroesPerformanceScoreType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerHeroesPerformanceScoreTypeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder WithScore(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("score", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder ExceptScore()
        {
            return ExceptField("score");
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder WithWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder ExceptWinCount()
        {
            return ExceptField("winCount");
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder WithImp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("imp", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerHeroesPerformanceScoreTypeQueryBuilder ExceptImp()
        {
            return ExceptField("imp");
        }
    }
}
