// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class HeroGuideListTypeQueryBuilder : GraphQlQueryBuilder<HeroGuideListTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "guides", IsComplex = true, QueryBuilderType = typeof(HeroGuideTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "HeroGuideListType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public HeroGuideListTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroGuideListTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public HeroGuideListTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroGuideListTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public HeroGuideListTypeQueryBuilder WithGuides(HeroGuideTypeQueryBuilder heroGuideTypeQueryBuilder, QueryBuilderParameter<object> itemId = null, QueryBuilderParameter<object> neutralItemId = null, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> take = null, string alias = null, IncludeDirective include = null, SkipDirective skipDirective = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (itemId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "itemId", ArgumentValue = itemId} );

            if (neutralItemId != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "neutralItemId", ArgumentValue = neutralItemId} );

            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (take != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "take", ArgumentValue = take} );

            return WithObjectField("guides", alias, heroGuideTypeQueryBuilder, new GraphQlDirective[] { include, skipDirective }, args);
        }

        public HeroGuideListTypeQueryBuilder ExceptGuides()
        {
            return ExceptField("guides");
        }
    }
}
