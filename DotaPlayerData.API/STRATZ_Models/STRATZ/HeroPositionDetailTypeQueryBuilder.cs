// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class HeroPositionDetailTypeQueryBuilder : GraphQlQueryBuilder<HeroPositionDetailTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "position" },
                new FieldMetadata { Name = "matchCount", IsComplex = true },
                new FieldMetadata { Name = "winCount", IsComplex = true },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "assists", IsComplex = true },
                new FieldMetadata { Name = "cs", IsComplex = true },
                new FieldMetadata { Name = "dn", IsComplex = true },
                new FieldMetadata { Name = "heroDamage", IsComplex = true },
                new FieldMetadata { Name = "towerDamage", IsComplex = true }
            };

        protected override string TypeName { get { return "HeroPositionDetailType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public HeroPositionDetailTypeQueryBuilder WithPosition(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("position", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }

        public HeroPositionDetailTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public HeroPositionDetailTypeQueryBuilder WithWinCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winCount", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptWinCount()
        {
            return ExceptField("winCount");
        }

        public HeroPositionDetailTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public HeroPositionDetailTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public HeroPositionDetailTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public HeroPositionDetailTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public HeroPositionDetailTypeQueryBuilder WithDn(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("dn", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptDn()
        {
            return ExceptField("dn");
        }

        public HeroPositionDetailTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public HeroPositionDetailTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroPositionDetailTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }
    }
}
