// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerBreakdownObjectTypeQueryBuilder : GraphQlQueryBuilder<PlayerBreakdownObjectTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "id" },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "win" },
                new FieldMetadata { Name = "imp" },
                new FieldMetadata { Name = "lastSeenDateTime", IsComplex = true }
            };

        protected override string TypeName { get { return "PlayerBreakdownObjectType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerBreakdownObjectTypeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBreakdownObjectTypeQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PlayerBreakdownObjectTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBreakdownObjectTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public PlayerBreakdownObjectTypeQueryBuilder WithWin(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("win", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBreakdownObjectTypeQueryBuilder ExceptWin()
        {
            return ExceptField("win");
        }

        public PlayerBreakdownObjectTypeQueryBuilder WithImp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("imp", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBreakdownObjectTypeQueryBuilder ExceptImp()
        {
            return ExceptField("imp");
        }

        public PlayerBreakdownObjectTypeQueryBuilder WithLastSeenDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastSeenDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBreakdownObjectTypeQueryBuilder ExceptLastSeenDateTime()
        {
            return ExceptField("lastSeenDateTime");
        }
    }
}
