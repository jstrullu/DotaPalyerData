// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class RecentWinStreakTypeQueryBuilder : GraphQlQueryBuilder<RecentWinStreakTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "winStreakCount" },
                new FieldMetadata { Name = "status" },
                new FieldMetadata { Name = "firstWonMatchDateTime", IsComplex = true },
                new FieldMetadata { Name = "lastWonMatchDateTime", IsComplex = true },
                new FieldMetadata { Name = "match", IsComplex = true, QueryBuilderType = typeof(MatchTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "RecentWinStreakType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RecentWinStreakTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public RecentWinStreakTypeQueryBuilder WithWinStreakCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winStreakCount", alias, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptWinStreakCount()
        {
            return ExceptField("winStreakCount");
        }

        public RecentWinStreakTypeQueryBuilder WithStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("status", alias, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptStatus()
        {
            return ExceptField("status");
        }

        public RecentWinStreakTypeQueryBuilder WithFirstWonMatchDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("firstWonMatchDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptFirstWonMatchDateTime()
        {
            return ExceptField("firstWonMatchDateTime");
        }

        public RecentWinStreakTypeQueryBuilder WithLastWonMatchDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastWonMatchDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptLastWonMatchDateTime()
        {
            return ExceptField("lastWonMatchDateTime");
        }

        public RecentWinStreakTypeQueryBuilder WithMatch(MatchTypeQueryBuilder matchTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("match", alias, matchTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RecentWinStreakTypeQueryBuilder ExceptMatch()
        {
            return ExceptField("match");
        }
    }
}
