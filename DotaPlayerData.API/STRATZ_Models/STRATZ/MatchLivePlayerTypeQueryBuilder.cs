// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchLivePlayerTypeQueryBuilder : GraphQlQueryBuilder<MatchLivePlayerTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "hero", IsComplex = true, QueryBuilderType = typeof(HeroTypeQueryBuilder) },
                new FieldMetadata { Name = "name" },
                new FieldMetadata { Name = "playerSlot", IsComplex = true },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(SteamAccountTypeQueryBuilder) },
                new FieldMetadata { Name = "isRadiant" },
                new FieldMetadata { Name = "numKills", IsComplex = true },
                new FieldMetadata { Name = "numDeaths", IsComplex = true },
                new FieldMetadata { Name = "numAssists", IsComplex = true },
                new FieldMetadata { Name = "leaverStatus", IsComplex = true },
                new FieldMetadata { Name = "numLastHits", IsComplex = true },
                new FieldMetadata { Name = "numDenies", IsComplex = true },
                new FieldMetadata { Name = "goldPerMinute", IsComplex = true },
                new FieldMetadata { Name = "experiencePerMinute", IsComplex = true },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "gold" },
                new FieldMetadata { Name = "goldSpent" },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "towerDamage" },
                new FieldMetadata { Name = "itemId0", IsComplex = true },
                new FieldMetadata { Name = "itemId1", IsComplex = true },
                new FieldMetadata { Name = "itemId2", IsComplex = true },
                new FieldMetadata { Name = "itemId3", IsComplex = true },
                new FieldMetadata { Name = "itemId4", IsComplex = true },
                new FieldMetadata { Name = "itemId5", IsComplex = true },
                new FieldMetadata { Name = "backpackId0", IsComplex = true },
                new FieldMetadata { Name = "backpackId1", IsComplex = true },
                new FieldMetadata { Name = "backpackId2", IsComplex = true },
                new FieldMetadata { Name = "playbackData", IsComplex = true, QueryBuilderType = typeof(MatchPlayerLivePlaybackDataTypeQueryBuilder) },
                new FieldMetadata { Name = "networth" },
                new FieldMetadata { Name = "respawnTimer", IsComplex = true },
                new FieldMetadata { Name = "ultimateCooldown", IsComplex = true },
                new FieldMetadata { Name = "ultimateState", IsComplex = true },
                new FieldMetadata { Name = "impPerMinute", IsComplex = true, QueryBuilderType = typeof(MatchLivePlayerImpDetailTypeQueryBuilder) },
                new FieldMetadata { Name = "gameVersionId", IsComplex = true },
                new FieldMetadata { Name = "baseWinRateValue" },
                new FieldMetadata { Name = "position" }
            };

        protected override string TypeName { get { return "MatchLivePlayerType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchLivePlayerTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public MatchLivePlayerTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public MatchLivePlayerTypeQueryBuilder WithHero(HeroTypeQueryBuilder heroTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("hero", alias, heroTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptHero()
        {
            return ExceptField("hero");
        }

        public MatchLivePlayerTypeQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public MatchLivePlayerTypeQueryBuilder WithPlayerSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("playerSlot", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptPlayerSlot()
        {
            return ExceptField("playerSlot");
        }

        public MatchLivePlayerTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public MatchLivePlayerTypeQueryBuilder WithSteamAccount(SteamAccountTypeQueryBuilder steamAccountTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, steamAccountTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }

        public MatchLivePlayerTypeQueryBuilder WithIsRadiant(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isRadiant", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptIsRadiant()
        {
            return ExceptField("isRadiant");
        }

        public MatchLivePlayerTypeQueryBuilder WithNumKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numKills", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNumKills()
        {
            return ExceptField("numKills");
        }

        public MatchLivePlayerTypeQueryBuilder WithNumDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numDeaths", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNumDeaths()
        {
            return ExceptField("numDeaths");
        }

        public MatchLivePlayerTypeQueryBuilder WithNumAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numAssists", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNumAssists()
        {
            return ExceptField("numAssists");
        }

        public MatchLivePlayerTypeQueryBuilder WithLeaverStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("leaverStatus", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptLeaverStatus()
        {
            return ExceptField("leaverStatus");
        }

        public MatchLivePlayerTypeQueryBuilder WithNumLastHits(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numLastHits", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNumLastHits()
        {
            return ExceptField("numLastHits");
        }

        public MatchLivePlayerTypeQueryBuilder WithNumDenies(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numDenies", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNumDenies()
        {
            return ExceptField("numDenies");
        }

        public MatchLivePlayerTypeQueryBuilder WithGoldPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptGoldPerMinute()
        {
            return ExceptField("goldPerMinute");
        }

        public MatchLivePlayerTypeQueryBuilder WithExperiencePerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("experiencePerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptExperiencePerMinute()
        {
            return ExceptField("experiencePerMinute");
        }

        public MatchLivePlayerTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public MatchLivePlayerTypeQueryBuilder WithGold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gold", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptGold()
        {
            return ExceptField("gold");
        }

        public MatchLivePlayerTypeQueryBuilder WithGoldSpent(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpent", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptGoldSpent()
        {
            return ExceptField("goldSpent");
        }

        public MatchLivePlayerTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public MatchLivePlayerTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId0(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId0", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId0()
        {
            return ExceptField("itemId0");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId1", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId1()
        {
            return ExceptField("itemId1");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId2", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId2()
        {
            return ExceptField("itemId2");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId3", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId3()
        {
            return ExceptField("itemId3");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId4(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId4", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId4()
        {
            return ExceptField("itemId4");
        }

        public MatchLivePlayerTypeQueryBuilder WithItemId5(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId5", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptItemId5()
        {
            return ExceptField("itemId5");
        }

        public MatchLivePlayerTypeQueryBuilder WithBackpackId0(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpackId0", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptBackpackId0()
        {
            return ExceptField("backpackId0");
        }

        public MatchLivePlayerTypeQueryBuilder WithBackpackId1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpackId1", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptBackpackId1()
        {
            return ExceptField("backpackId1");
        }

        public MatchLivePlayerTypeQueryBuilder WithBackpackId2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpackId2", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptBackpackId2()
        {
            return ExceptField("backpackId2");
        }

        public MatchLivePlayerTypeQueryBuilder WithPlaybackData(MatchPlayerLivePlaybackDataTypeQueryBuilder matchPlayerLivePlaybackDataTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playbackData", alias, matchPlayerLivePlaybackDataTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptPlaybackData()
        {
            return ExceptField("playbackData");
        }

        public MatchLivePlayerTypeQueryBuilder WithNetworth(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networth", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptNetworth()
        {
            return ExceptField("networth");
        }

        public MatchLivePlayerTypeQueryBuilder WithRespawnTimer(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("respawnTimer", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptRespawnTimer()
        {
            return ExceptField("respawnTimer");
        }

        public MatchLivePlayerTypeQueryBuilder WithUltimateCooldown(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ultimateCooldown", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptUltimateCooldown()
        {
            return ExceptField("ultimateCooldown");
        }

        public MatchLivePlayerTypeQueryBuilder WithUltimateState(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ultimateState", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptUltimateState()
        {
            return ExceptField("ultimateState");
        }

        public MatchLivePlayerTypeQueryBuilder WithImpPerMinute(MatchLivePlayerImpDetailTypeQueryBuilder matchLivePlayerImpDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("impPerMinute", alias, matchLivePlayerImpDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptImpPerMinute()
        {
            return ExceptField("impPerMinute");
        }

        public MatchLivePlayerTypeQueryBuilder WithGameVersionId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gameVersionId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptGameVersionId()
        {
            return ExceptField("gameVersionId");
        }

        public MatchLivePlayerTypeQueryBuilder WithBaseWinRateValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("baseWinRateValue", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptBaseWinRateValue()
        {
            return ExceptField("baseWinRateValue");
        }

        public MatchLivePlayerTypeQueryBuilder WithPosition(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("position", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchLivePlayerTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }
    }
}
