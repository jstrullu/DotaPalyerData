// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchReplayUploadPlayerTypeQueryBuilder : GraphQlQueryBuilder<MatchReplayUploadPlayerTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "playerSlot", IsComplex = true },
                new FieldMetadata { Name = "matchUploadTeamId", IsComplex = true },
                new FieldMetadata { Name = "steamAccountId", IsComplex = true },
                new FieldMetadata { Name = "steamAccount", IsComplex = true, QueryBuilderType = typeof(SteamAccountTypeQueryBuilder) },
                new FieldMetadata { Name = "isRadiant" },
                new FieldMetadata { Name = "isDire" },
                new FieldMetadata { Name = "teamSlot", IsComplex = true },
                new FieldMetadata { Name = "heroId", IsComplex = true },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "assists", IsComplex = true },
                new FieldMetadata { Name = "networth" },
                new FieldMetadata { Name = "lastHits", IsComplex = true },
                new FieldMetadata { Name = "denies", IsComplex = true },
                new FieldMetadata { Name = "goldPerMinute", IsComplex = true },
                new FieldMetadata { Name = "experiencePerMinute", IsComplex = true },
                new FieldMetadata { Name = "totalGoldSpent" },
                new FieldMetadata { Name = "goldSpentOnBuybacks" },
                new FieldMetadata { Name = "goldSpentOnConsumables" },
                new FieldMetadata { Name = "goldSpentOnItems" },
                new FieldMetadata { Name = "goldSpentOnSupport" },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "towerDamage" },
                new FieldMetadata { Name = "towerKills", IsComplex = true },
                new FieldMetadata { Name = "heroHealing" },
                new FieldMetadata { Name = "level", IsComplex = true },
                new FieldMetadata { Name = "item0Id", IsComplex = true },
                new FieldMetadata { Name = "item1Id", IsComplex = true },
                new FieldMetadata { Name = "item2Id", IsComplex = true },
                new FieldMetadata { Name = "item3Id", IsComplex = true },
                new FieldMetadata { Name = "item4Id", IsComplex = true },
                new FieldMetadata { Name = "item5Id", IsComplex = true },
                new FieldMetadata { Name = "backpack0Id", IsComplex = true },
                new FieldMetadata { Name = "backpack1Id", IsComplex = true },
                new FieldMetadata { Name = "backpack2Id", IsComplex = true },
                new FieldMetadata { Name = "lane" },
                new FieldMetadata { Name = "role" },
                new FieldMetadata { Name = "position" },
                new FieldMetadata { Name = "pickOrder", IsComplex = true },
                new FieldMetadata { Name = "teamPickOrder" },
                new FieldMetadata { Name = "isVictory" },
                new FieldMetadata { Name = "killsList", IsComplex = true },
                new FieldMetadata { Name = "assistsList", IsComplex = true },
                new FieldMetadata { Name = "deathsList", IsComplex = true },
                new FieldMetadata { Name = "streakList", IsComplex = true },
                new FieldMetadata { Name = "levelList", IsComplex = true },
                new FieldMetadata { Name = "totalEarnedGoldList", IsComplex = true },
                new FieldMetadata { Name = "reliableGoldList", IsComplex = true },
                new FieldMetadata { Name = "unreliableGoldList", IsComplex = true },
                new FieldMetadata { Name = "totalEarnedXpList", IsComplex = true },
                new FieldMetadata { Name = "sharedGoldList", IsComplex = true },
                new FieldMetadata { Name = "heroKillGoldList", IsComplex = true },
                new FieldMetadata { Name = "creepKillGoldList", IsComplex = true },
                new FieldMetadata { Name = "incomeGoldList", IsComplex = true },
                new FieldMetadata { Name = "networthList", IsComplex = true },
                new FieldMetadata { Name = "denyCountList", IsComplex = true },
                new FieldMetadata { Name = "lastHitCountList", IsComplex = true },
                new FieldMetadata { Name = "lastHitStreakList", IsComplex = true },
                new FieldMetadata { Name = "lastHitMultiKillList", IsComplex = true },
                new FieldMetadata { Name = "nearbyCreepDeathCountList", IsComplex = true },
                new FieldMetadata { Name = "claimedDenyCountList", IsComplex = true },
                new FieldMetadata { Name = "claimedMissCountList", IsComplex = true },
                new FieldMetadata { Name = "missCountList", IsComplex = true },
                new FieldMetadata { Name = "stunsList", IsComplex = true },
                new FieldMetadata { Name = "heroHealingList", IsComplex = true },
                new FieldMetadata { Name = "towerKillsList", IsComplex = true },
                new FieldMetadata { Name = "roshanKillsList", IsComplex = true },
                new FieldMetadata { Name = "observerWardsPlacedList", IsComplex = true },
                new FieldMetadata { Name = "sentryWardsPlacedList", IsComplex = true },
                new FieldMetadata { Name = "creepStackList", IsComplex = true },
                new FieldMetadata { Name = "campStackList", IsComplex = true },
                new FieldMetadata { Name = "runePicksupList", IsComplex = true },
                new FieldMetadata { Name = "goldSpentOnSupportList", IsComplex = true },
                new FieldMetadata { Name = "heroDamageList", IsComplex = true },
                new FieldMetadata { Name = "wardsPurchasedList", IsComplex = true },
                new FieldMetadata { Name = "wardsDestroyedList", IsComplex = true },
                new FieldMetadata { Name = "commandsIssuedList", IsComplex = true },
                new FieldMetadata { Name = "goldSpentOnConsumablesList", IsComplex = true },
                new FieldMetadata { Name = "goldSpentOnItemsList", IsComplex = true },
                new FieldMetadata { Name = "goldSpentOnBuybacksList", IsComplex = true },
                new FieldMetadata { Name = "goldLostToDeathList", IsComplex = true },
                new FieldMetadata { Name = "maxHealthList", IsComplex = true },
                new FieldMetadata { Name = "maxManaList", IsComplex = true },
                new FieldMetadata { Name = "bkbChargesUsedList", IsComplex = true },
                new FieldMetadata { Name = "damageMinList", IsComplex = true },
                new FieldMetadata { Name = "damageMaxList", IsComplex = true },
                new FieldMetadata { Name = "damageBonusList", IsComplex = true },
                new FieldMetadata { Name = "strengthTotalList", IsComplex = true },
                new FieldMetadata { Name = "agilityTotalList", IsComplex = true },
                new FieldMetadata { Name = "intellectTotalList", IsComplex = true },
                new FieldMetadata { Name = "towerDamageList", IsComplex = true },
                new FieldMetadata { Name = "items", IsComplex = true, QueryBuilderType = typeof(MatchReplayUploadPlayerStatsItemsTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchReplayUploadPlayerType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchReplayUploadPlayerTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithPlayerSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("playerSlot", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptPlayerSlot()
        {
            return ExceptField("playerSlot");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithMatchUploadTeamId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchUploadTeamId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptMatchUploadTeamId()
        {
            return ExceptField("matchUploadTeamId");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithSteamAccountId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("steamAccountId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptSteamAccountId()
        {
            return ExceptField("steamAccountId");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithSteamAccount(SteamAccountTypeQueryBuilder steamAccountTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("steamAccount", alias, steamAccountTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptSteamAccount()
        {
            return ExceptField("steamAccount");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithIsRadiant(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isRadiant", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptIsRadiant()
        {
            return ExceptField("isRadiant");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithIsDire(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isDire", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptIsDire()
        {
            return ExceptField("isDire");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTeamSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamSlot", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTeamSlot()
        {
            return ExceptField("teamSlot");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithNetworth(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networth", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptNetworth()
        {
            return ExceptField("networth");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLastHits(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastHits", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLastHits()
        {
            return ExceptField("lastHits");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDenies(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("denies", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDenies()
        {
            return ExceptField("denies");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldPerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldPerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldPerMinute()
        {
            return ExceptField("goldPerMinute");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithExperiencePerMinute(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("experiencePerMinute", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptExperiencePerMinute()
        {
            return ExceptField("experiencePerMinute");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTotalGoldSpent(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("totalGoldSpent", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTotalGoldSpent()
        {
            return ExceptField("totalGoldSpent");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnBuybacks(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnBuybacks", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnBuybacks()
        {
            return ExceptField("goldSpentOnBuybacks");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnConsumables(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnConsumables", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnConsumables()
        {
            return ExceptField("goldSpentOnConsumables");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnItems(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnItems", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnItems()
        {
            return ExceptField("goldSpentOnItems");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnSupport(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnSupport", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnSupport()
        {
            return ExceptField("goldSpentOnSupport");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTowerKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerKills", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTowerKills()
        {
            return ExceptField("towerKills");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroHealing(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroHealing", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroHealing()
        {
            return ExceptField("heroHealing");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem0Id()
        {
            return ExceptField("item0Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem1Id()
        {
            return ExceptField("item1Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem2Id()
        {
            return ExceptField("item2Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem3Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item3Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem3Id()
        {
            return ExceptField("item3Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem4Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item4Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem4Id()
        {
            return ExceptField("item4Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItem5Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("item5Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItem5Id()
        {
            return ExceptField("item5Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithBackpack0Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack0Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptBackpack0Id()
        {
            return ExceptField("backpack0Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithBackpack1Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack1Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptBackpack1Id()
        {
            return ExceptField("backpack1Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithBackpack2Id(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("backpack2Id", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptBackpack2Id()
        {
            return ExceptField("backpack2Id");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLane(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lane", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLane()
        {
            return ExceptField("lane");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithRole(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("role", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptRole()
        {
            return ExceptField("role");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithPosition(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("position", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptPosition()
        {
            return ExceptField("position");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithPickOrder(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pickOrder", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptPickOrder()
        {
            return ExceptField("pickOrder");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTeamPickOrder(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamPickOrder", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTeamPickOrder()
        {
            return ExceptField("teamPickOrder");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithIsVictory(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isVictory", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptIsVictory()
        {
            return ExceptField("isVictory");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithKillsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptKillsList()
        {
            return ExceptField("killsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithAssistsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptAssistsList()
        {
            return ExceptField("assistsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDeathsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deathsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDeathsList()
        {
            return ExceptField("deathsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithStreakList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("streakList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptStreakList()
        {
            return ExceptField("streakList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLevelList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("levelList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLevelList()
        {
            return ExceptField("levelList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTotalEarnedGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("totalEarnedGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTotalEarnedGoldList()
        {
            return ExceptField("totalEarnedGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithReliableGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("reliableGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptReliableGoldList()
        {
            return ExceptField("reliableGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithUnreliableGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("unreliableGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptUnreliableGoldList()
        {
            return ExceptField("unreliableGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTotalEarnedXpList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("totalEarnedXpList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTotalEarnedXpList()
        {
            return ExceptField("totalEarnedXpList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithSharedGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("sharedGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptSharedGoldList()
        {
            return ExceptField("sharedGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroKillGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroKillGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroKillGoldList()
        {
            return ExceptField("heroKillGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithCreepKillGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creepKillGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptCreepKillGoldList()
        {
            return ExceptField("creepKillGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithIncomeGoldList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("incomeGoldList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptIncomeGoldList()
        {
            return ExceptField("incomeGoldList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithNetworthList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("networthList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptNetworthList()
        {
            return ExceptField("networthList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDenyCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("denyCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDenyCountList()
        {
            return ExceptField("denyCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLastHitCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastHitCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLastHitCountList()
        {
            return ExceptField("lastHitCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLastHitStreakList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastHitStreakList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLastHitStreakList()
        {
            return ExceptField("lastHitStreakList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithLastHitMultiKillList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastHitMultiKillList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptLastHitMultiKillList()
        {
            return ExceptField("lastHitMultiKillList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithNearbyCreepDeathCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("nearbyCreepDeathCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptNearbyCreepDeathCountList()
        {
            return ExceptField("nearbyCreepDeathCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithClaimedDenyCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("claimedDenyCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptClaimedDenyCountList()
        {
            return ExceptField("claimedDenyCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithClaimedMissCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("claimedMissCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptClaimedMissCountList()
        {
            return ExceptField("claimedMissCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithMissCountList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("missCountList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptMissCountList()
        {
            return ExceptField("missCountList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithStunsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stunsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptStunsList()
        {
            return ExceptField("stunsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroHealingList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroHealingList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroHealingList()
        {
            return ExceptField("heroHealingList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTowerKillsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerKillsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTowerKillsList()
        {
            return ExceptField("towerKillsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithRoshanKillsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("roshanKillsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptRoshanKillsList()
        {
            return ExceptField("roshanKillsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithObserverWardsPlacedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("observerWardsPlacedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptObserverWardsPlacedList()
        {
            return ExceptField("observerWardsPlacedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithSentryWardsPlacedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("sentryWardsPlacedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptSentryWardsPlacedList()
        {
            return ExceptField("sentryWardsPlacedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithCreepStackList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creepStackList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptCreepStackList()
        {
            return ExceptField("creepStackList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithCampStackList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("campStackList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptCampStackList()
        {
            return ExceptField("campStackList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithRunePicksupList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("runePicksupList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptRunePicksupList()
        {
            return ExceptField("runePicksupList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnSupportList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnSupportList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnSupportList()
        {
            return ExceptField("goldSpentOnSupportList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithHeroDamageList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamageList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptHeroDamageList()
        {
            return ExceptField("heroDamageList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithWardsPurchasedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("wardsPurchasedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptWardsPurchasedList()
        {
            return ExceptField("wardsPurchasedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithWardsDestroyedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("wardsDestroyedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptWardsDestroyedList()
        {
            return ExceptField("wardsDestroyedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithCommandsIssuedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("commandsIssuedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptCommandsIssuedList()
        {
            return ExceptField("commandsIssuedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnConsumablesList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnConsumablesList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnConsumablesList()
        {
            return ExceptField("goldSpentOnConsumablesList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnItemsList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnItemsList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnItemsList()
        {
            return ExceptField("goldSpentOnItemsList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldSpentOnBuybacksList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldSpentOnBuybacksList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldSpentOnBuybacksList()
        {
            return ExceptField("goldSpentOnBuybacksList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithGoldLostToDeathList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldLostToDeathList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptGoldLostToDeathList()
        {
            return ExceptField("goldLostToDeathList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithMaxHealthList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("maxHealthList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptMaxHealthList()
        {
            return ExceptField("maxHealthList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithMaxManaList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("maxManaList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptMaxManaList()
        {
            return ExceptField("maxManaList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithBkbChargesUsedList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("bkbChargesUsedList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptBkbChargesUsedList()
        {
            return ExceptField("bkbChargesUsedList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDamageMinList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("damageMinList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDamageMinList()
        {
            return ExceptField("damageMinList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDamageMaxList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("damageMaxList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDamageMaxList()
        {
            return ExceptField("damageMaxList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithDamageBonusList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("damageBonusList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptDamageBonusList()
        {
            return ExceptField("damageBonusList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithStrengthTotalList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("strengthTotalList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptStrengthTotalList()
        {
            return ExceptField("strengthTotalList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithAgilityTotalList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("agilityTotalList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptAgilityTotalList()
        {
            return ExceptField("agilityTotalList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithIntellectTotalList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("intellectTotalList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptIntellectTotalList()
        {
            return ExceptField("intellectTotalList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithTowerDamageList(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamageList", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptTowerDamageList()
        {
            return ExceptField("towerDamageList");
        }

        public MatchReplayUploadPlayerTypeQueryBuilder WithItems(MatchReplayUploadPlayerStatsItemsTypeQueryBuilder matchReplayUploadPlayerStatsItemsTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("items", alias, matchReplayUploadPlayerStatsItemsTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchReplayUploadPlayerTypeQueryBuilder ExceptItems()
        {
            return ExceptField("items");
        }
    }
}
