// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class HeroItemBootPurchaseObjectTypeQueryBuilder : GraphQlQueryBuilder<HeroItemBootPurchaseObjectTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "itemId" },
                new FieldMetadata { Name = "instance" },
                new FieldMetadata { Name = "time", IsComplex = true },
                new FieldMetadata { Name = "timeAverage", IsComplex = true },
                new FieldMetadata { Name = "count", IsComplex = true },
                new FieldMetadata { Name = "wins", IsComplex = true },
                new FieldMetadata { Name = "winAverage", IsComplex = true },
                new FieldMetadata { Name = "kills", IsComplex = true },
                new FieldMetadata { Name = "killsAverage", IsComplex = true },
                new FieldMetadata { Name = "deaths", IsComplex = true },
                new FieldMetadata { Name = "deathsAverage", IsComplex = true },
                new FieldMetadata { Name = "assists", IsComplex = true },
                new FieldMetadata { Name = "assistsAverage", IsComplex = true },
                new FieldMetadata { Name = "goldEarned", IsComplex = true },
                new FieldMetadata { Name = "goldEarnedAverage", IsComplex = true },
                new FieldMetadata { Name = "xp", IsComplex = true },
                new FieldMetadata { Name = "xpAverage", IsComplex = true },
                new FieldMetadata { Name = "activations", IsComplex = true },
                new FieldMetadata { Name = "activationsAverage", IsComplex = true },
                new FieldMetadata { Name = "activationTime", IsComplex = true },
                new FieldMetadata { Name = "activationsTimeAverage", IsComplex = true }
            };

        protected override string TypeName { get { return "HeroItemBootPurchaseObjectType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithItemId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("itemId", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptItemId()
        {
            return ExceptField("itemId");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithInstance(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("instance", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptInstance()
        {
            return ExceptField("instance");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithTimeAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timeAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptTimeAverage()
        {
            return ExceptField("timeAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("count", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptCount()
        {
            return ExceptField("count");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithWins(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("wins", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptWins()
        {
            return ExceptField("wins");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithWinAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptWinAverage()
        {
            return ExceptField("winAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithKillsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("killsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptKillsAverage()
        {
            return ExceptField("killsAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithDeathsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deathsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptDeathsAverage()
        {
            return ExceptField("deathsAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithAssistsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptAssistsAverage()
        {
            return ExceptField("assistsAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithGoldEarned(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldEarned", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptGoldEarned()
        {
            return ExceptField("goldEarned");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithGoldEarnedAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("goldEarnedAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptGoldEarnedAverage()
        {
            return ExceptField("goldEarnedAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithXp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xp", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptXp()
        {
            return ExceptField("xp");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithXpAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptXpAverage()
        {
            return ExceptField("xpAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithActivations(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("activations", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptActivations()
        {
            return ExceptField("activations");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithActivationsAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("activationsAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptActivationsAverage()
        {
            return ExceptField("activationsAverage");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithActivationTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("activationTime", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptActivationTime()
        {
            return ExceptField("activationTime");
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder WithActivationsTimeAverage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("activationsTimeAverage", alias, new GraphQlDirective[] { include, skip });
        }

        public HeroItemBootPurchaseObjectTypeQueryBuilder ExceptActivationsTimeAverage()
        {
            return ExceptField("activationsTimeAverage");
        }
    }
}
