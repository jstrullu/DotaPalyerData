// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlusHoverTypeQueryBuilder : GraphQlQueryBuilder<PlusHoverTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "players", IsComplex = true, QueryBuilderType = typeof(PlusPlayerHoverTypeQueryBuilder) },
                new FieldMetadata { Name = "bans", IsComplex = true, QueryBuilderType = typeof(PlusHoverBanTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "PlusHoverType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlusHoverTypeQueryBuilder WithPlayers(PlusPlayerHoverTypeQueryBuilder plusPlayerHoverTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("players", alias, plusPlayerHoverTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlusHoverTypeQueryBuilder ExceptPlayers()
        {
            return ExceptField("players");
        }

        public PlusHoverTypeQueryBuilder WithBans(PlusHoverBanTypeQueryBuilder plusHoverBanTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("bans", alias, plusHoverBanTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlusHoverTypeQueryBuilder ExceptBans()
        {
            return ExceptField("bans");
        }
    }
}
