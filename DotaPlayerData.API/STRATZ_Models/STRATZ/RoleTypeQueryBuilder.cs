// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class RoleTypeQueryBuilder : GraphQlQueryBuilder<RoleTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "roleId", IsComplex = true },
                new FieldMetadata { Name = "name" },
                new FieldMetadata { Name = "langKey" }
            };

        protected override string TypeName { get { return "RoleType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RoleTypeQueryBuilder WithRoleId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("roleId", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleTypeQueryBuilder ExceptRoleId()
        {
            return ExceptField("roleId");
        }

        public RoleTypeQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleTypeQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public RoleTypeQueryBuilder WithLangKey(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("langKey", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleTypeQueryBuilder ExceptLangKey()
        {
            return ExceptField("langKey");
        }
    }
}
