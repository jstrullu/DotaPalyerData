// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchStatsLaneReportFactionObjectTypeQueryBuilder : GraphQlQueryBuilder<MatchStatsLaneReportFactionObjectTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "midLane", IsComplex = true, QueryBuilderType = typeof(MatchStatsLaneReportFactionLaneObjectQueryBuilder) },
                new FieldMetadata { Name = "offLane", IsComplex = true, QueryBuilderType = typeof(MatchStatsLaneReportFactionLaneObjectQueryBuilder) },
                new FieldMetadata { Name = "safeLane", IsComplex = true, QueryBuilderType = typeof(MatchStatsLaneReportFactionLaneObjectQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchStatsLaneReportFactionObjectType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder WithMidLane(MatchStatsLaneReportFactionLaneObjectQueryBuilder matchStatsLaneReportFactionLaneObjectQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("midLane", alias, matchStatsLaneReportFactionLaneObjectQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder ExceptMidLane()
        {
            return ExceptField("midLane");
        }

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder WithOffLane(MatchStatsLaneReportFactionLaneObjectQueryBuilder matchStatsLaneReportFactionLaneObjectQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("offLane", alias, matchStatsLaneReportFactionLaneObjectQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder ExceptOffLane()
        {
            return ExceptField("offLane");
        }

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder WithSafeLane(MatchStatsLaneReportFactionLaneObjectQueryBuilder matchStatsLaneReportFactionLaneObjectQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("safeLane", alias, matchStatsLaneReportFactionLaneObjectQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsLaneReportFactionObjectTypeQueryBuilder ExceptSafeLane()
        {
            return ExceptField("safeLane");
        }
    }
}
