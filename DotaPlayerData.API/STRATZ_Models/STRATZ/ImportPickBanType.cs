// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class ImportPickBanType : IGraphQlInputObject
    {
        private InputPropertyInfo _playerSlot;
        private InputPropertyInfo _isPick;
        private InputPropertyInfo _heroId;
        private InputPropertyInfo _time;
        private InputPropertyInfo _isRadiant;
        private InputPropertyInfo _order;
        private InputPropertyInfo _wasBannedSuccessfully;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> PlayerSlot
        {
            get { return (QueryBuilderParameter<byte?>)_playerSlot.Value; }
            set { _playerSlot = new InputPropertyInfo { Name = "playerSlot", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> IsPick
        {
            get { return (QueryBuilderParameter<bool?>)_isPick.Value; }
            set { _isPick = new InputPropertyInfo { Name = "isPick", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<short?>))]
        #endif
        public QueryBuilderParameter<short?> HeroId
        {
            get { return (QueryBuilderParameter<short?>)_heroId.Value; }
            set { _heroId = new InputPropertyInfo { Name = "heroId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> Time
        {
            get { return (QueryBuilderParameter<byte?>)_time.Value; }
            set { _time = new InputPropertyInfo { Name = "time", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> IsRadiant
        {
            get { return (QueryBuilderParameter<bool?>)_isRadiant.Value; }
            set { _isRadiant = new InputPropertyInfo { Name = "isRadiant", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<byte?>))]
        #endif
        public QueryBuilderParameter<byte?> Order
        {
            get { return (QueryBuilderParameter<byte?>)_order.Value; }
            set { _order = new InputPropertyInfo { Name = "order", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> WasBannedSuccessfully
        {
            get { return (QueryBuilderParameter<bool?>)_wasBannedSuccessfully.Value; }
            set { _wasBannedSuccessfully = new InputPropertyInfo { Name = "wasBannedSuccessfully", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_playerSlot.Name != null) yield return _playerSlot;
            if (_isPick.Name != null) yield return _isPick;
            if (_heroId.Name != null) yield return _heroId;
            if (_time.Name != null) yield return _time;
            if (_isRadiant.Name != null) yield return _isRadiant;
            if (_order.Name != null) yield return _order;
            if (_wasBannedSuccessfully.Name != null) yield return _wasBannedSuccessfully;
        }
    }
}
