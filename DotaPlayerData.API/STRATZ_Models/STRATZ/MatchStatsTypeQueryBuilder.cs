// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchStatsTypeQueryBuilder : GraphQlQueryBuilder<MatchStatsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "matchId", IsComplex = true },
                new FieldMetadata { Name = "radiantNetworthLeads", IsComplex = true },
                new FieldMetadata { Name = "radiantExperienceLeads", IsComplex = true },
                new FieldMetadata { Name = "radiantKills", IsComplex = true },
                new FieldMetadata { Name = "direKills", IsComplex = true },
                new FieldMetadata { Name = "pickBans", IsComplex = true, QueryBuilderType = typeof(MatchStatsPickBanTypeQueryBuilder) },
                new FieldMetadata { Name = "towerStatus", IsComplex = true, QueryBuilderType = typeof(MatchStatsTowerReportTypeQueryBuilder) },
                new FieldMetadata { Name = "laneReport", IsComplex = true, QueryBuilderType = typeof(MatchStatsLaneReportTypeQueryBuilder) },
                new FieldMetadata { Name = "winRates", IsComplex = true },
                new FieldMetadata { Name = "predictedWinRates", IsComplex = true },
                new FieldMetadata { Name = "chatEvents", IsComplex = true, QueryBuilderType = typeof(MatchStatsChatEventTypeQueryBuilder) },
                new FieldMetadata { Name = "towerDeaths", IsComplex = true, QueryBuilderType = typeof(MatchStatsTowerDeathTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchStatsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchStatsTypeQueryBuilder WithMatchId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptMatchId()
        {
            return ExceptField("matchId");
        }

        public MatchStatsTypeQueryBuilder WithRadiantNetworthLeads(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("radiantNetworthLeads", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptRadiantNetworthLeads()
        {
            return ExceptField("radiantNetworthLeads");
        }

        public MatchStatsTypeQueryBuilder WithRadiantExperienceLeads(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("radiantExperienceLeads", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptRadiantExperienceLeads()
        {
            return ExceptField("radiantExperienceLeads");
        }

        public MatchStatsTypeQueryBuilder WithRadiantKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("radiantKills", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptRadiantKills()
        {
            return ExceptField("radiantKills");
        }

        public MatchStatsTypeQueryBuilder WithDireKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("direKills", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptDireKills()
        {
            return ExceptField("direKills");
        }

        public MatchStatsTypeQueryBuilder WithPickBans(MatchStatsPickBanTypeQueryBuilder matchStatsPickBanTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("pickBans", alias, matchStatsPickBanTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptPickBans()
        {
            return ExceptField("pickBans");
        }

        public MatchStatsTypeQueryBuilder WithTowerStatus(MatchStatsTowerReportTypeQueryBuilder matchStatsTowerReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("towerStatus", alias, matchStatsTowerReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptTowerStatus()
        {
            return ExceptField("towerStatus");
        }

        public MatchStatsTypeQueryBuilder WithLaneReport(MatchStatsLaneReportTypeQueryBuilder matchStatsLaneReportTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("laneReport", alias, matchStatsLaneReportTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptLaneReport()
        {
            return ExceptField("laneReport");
        }

        public MatchStatsTypeQueryBuilder WithWinRates(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("winRates", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptWinRates()
        {
            return ExceptField("winRates");
        }

        public MatchStatsTypeQueryBuilder WithPredictedWinRates(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("predictedWinRates", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptPredictedWinRates()
        {
            return ExceptField("predictedWinRates");
        }

        public MatchStatsTypeQueryBuilder WithChatEvents(MatchStatsChatEventTypeQueryBuilder matchStatsChatEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("chatEvents", alias, matchStatsChatEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptChatEvents()
        {
            return ExceptField("chatEvents");
        }

        public MatchStatsTypeQueryBuilder WithTowerDeaths(MatchStatsTowerDeathTypeQueryBuilder matchStatsTowerDeathTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("towerDeaths", alias, matchStatsTowerDeathTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsTypeQueryBuilder ExceptTowerDeaths()
        {
            return ExceptField("towerDeaths");
        }
    }
}
