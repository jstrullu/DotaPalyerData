// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class AbilityLearnEventsTypeQueryBuilder : GraphQlQueryBuilder<AbilityLearnEventsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "time" },
                new FieldMetadata { Name = "abilityId", IsComplex = true },
                new FieldMetadata { Name = "levelObtained" },
                new FieldMetadata { Name = "level" },
                new FieldMetadata { Name = "isUltimate" },
                new FieldMetadata { Name = "isTalent" },
                new FieldMetadata { Name = "isMaxLevel" }
            };

        protected override string TypeName { get { return "AbilityLearnEventsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AbilityLearnEventsTypeQueryBuilder WithTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("time", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptTime()
        {
            return ExceptField("time");
        }

        public AbilityLearnEventsTypeQueryBuilder WithAbilityId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("abilityId", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptAbilityId()
        {
            return ExceptField("abilityId");
        }

        public AbilityLearnEventsTypeQueryBuilder WithLevelObtained(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("levelObtained", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptLevelObtained()
        {
            return ExceptField("levelObtained");
        }

        public AbilityLearnEventsTypeQueryBuilder WithLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("level", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptLevel()
        {
            return ExceptField("level");
        }

        public AbilityLearnEventsTypeQueryBuilder WithIsUltimate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isUltimate", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptIsUltimate()
        {
            return ExceptField("isUltimate");
        }

        public AbilityLearnEventsTypeQueryBuilder WithIsTalent(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isTalent", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptIsTalent()
        {
            return ExceptField("isTalent");
        }

        public AbilityLearnEventsTypeQueryBuilder WithIsMaxLevel(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isMaxLevel", alias, new GraphQlDirective[] { include, skip });
        }

        public AbilityLearnEventsTypeQueryBuilder ExceptIsMaxLevel()
        {
            return ExceptField("isMaxLevel");
        }
    }
}
