// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class AdminMutationQueryBuilder : GraphQlQueryBuilder<AdminMutationQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "mergeProSteamAccount" },
                new FieldMetadata { Name = "deleteProSteamAccount" }
            };

        protected override string TypeName { get { return "AdminMutation"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AdminMutationQueryBuilder WithMergeProSteamAccount(QueryBuilderParameter<IEnumerable<MergeProSteamAccountRequestType>> request, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "request", ArgumentValue = request} );
            return WithScalarField("mergeProSteamAccount", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public AdminMutationQueryBuilder ExceptMergeProSteamAccount()
        {
            return ExceptField("mergeProSteamAccount");
        }

        public AdminMutationQueryBuilder WithDeleteProSteamAccount(QueryBuilderParameter<DeleteProSteamAccountRequestType> request, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "request", ArgumentValue = request} );
            return WithScalarField("deleteProSteamAccount", alias, new GraphQlDirective[] { include, skip }, args);
        }

        public AdminMutationQueryBuilder ExceptDeleteProSteamAccount()
        {
            return ExceptField("deleteProSteamAccount");
        }
    }
}
