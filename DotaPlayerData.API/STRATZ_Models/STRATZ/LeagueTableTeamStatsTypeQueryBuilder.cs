// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class LeagueTableTeamStatsTypeQueryBuilder : GraphQlQueryBuilder<LeagueTableTeamStatsTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "kills" },
                new FieldMetadata { Name = "deaths" },
                new FieldMetadata { Name = "assists" },
                new FieldMetadata { Name = "cs" },
                new FieldMetadata { Name = "gpm" },
                new FieldMetadata { Name = "xpm" },
                new FieldMetadata { Name = "heal" },
                new FieldMetadata { Name = "heroDamage" },
                new FieldMetadata { Name = "towerDamage" },
                new FieldMetadata { Name = "duration" }
            };

        protected override string TypeName { get { return "LeagueTableTeamStatsType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LeagueTableTeamStatsTypeQueryBuilder WithKills(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("kills", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptKills()
        {
            return ExceptField("kills");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithDeaths(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("deaths", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptDeaths()
        {
            return ExceptField("deaths");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithAssists(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assists", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptAssists()
        {
            return ExceptField("assists");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithCs(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cs", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptCs()
        {
            return ExceptField("cs");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithGpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptGpm()
        {
            return ExceptField("gpm");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithXpm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("xpm", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptXpm()
        {
            return ExceptField("xpm");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithHeal(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heal", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptHeal()
        {
            return ExceptField("heal");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithHeroDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptHeroDamage()
        {
            return ExceptField("heroDamage");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithTowerDamage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("towerDamage", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptTowerDamage()
        {
            return ExceptField("towerDamage");
        }

        public LeagueTableTeamStatsTypeQueryBuilder WithDuration(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("duration", alias, new GraphQlDirective[] { include, skip });
        }

        public LeagueTableTeamStatsTypeQueryBuilder ExceptDuration()
        {
            return ExceptField("duration");
        }
    }
}
